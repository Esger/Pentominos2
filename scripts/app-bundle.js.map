{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/controls.js","components/header.js","components/menu.js","components/pentominos.js","components/solving.js","data/colors.js","data/pentominos.js","data/start-beam.js","data/start-dozen.js","data/start-rectangle.js","data/start-square.js","data/start-stick.js","data/start-twig.js","resources/index.js","services/board-service.js","services/data-service.js","services/drag-service.js","services/pentomino-service.js","services/permutation-service.js","services/setting-service.js","services/solution-service.js","services/solver-service.js","resources/value-converters/part-pos-value-converter.js","resources/value-converters/pento-face-value-converter.js","resources/value-converters/pento-pos-value-converter.js"],"names":["App","dragService","ds","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","boardService","bs","getBoardSizeCSS","shape","boardType","boardTypes","css","width","w","partSize","height","h","getBoardClasses","newSolution","classes","solvedClass","push","join","ControlsCustomElement","bindingSignaler","settingService","pentominoService","solutionService","bnds","ss","ps","sls","solutionCount","solutions","length","getIndicatorClass","solved","getIndicatorText","currentSolution","current","text","showSolutions","count","showSolution","pentominos","solutionString","splitString","substr","split","i","pentomino","props","face","parseInt","position","x","y","signal","registerPieces","unsetNewSolution","showButton","disableNextButton","disablePreviousButton","showFirstSolution","showPreviousSolution","showNextSolution","HeaderCustomElement","title","getHeaderSizeCss","MenuCustomElement","permutationService","solverService","prms","slvs","Object","keys","settings","menuVisible","submenuBoardsVisible","rotateBoard","flipBoardYAxis","showTheMenu","mixBoard","hideTheMenu","showThisBoard","key","toggleSubmenuBoards","getBoardDimensions","getActiveBoardClass","screenIsLargeEnough","clw","document","querySelectorAll","clientWidth","clh","clientHeight","getStartPosition","unsetSolved","autoSolve","setTimeout","PentominosCustomElement","getPentominoClasses","name","active","getPartClasses","partIndex","flipH","index","dimensions","flipV","type","attached","SolvingCustomElement","continue","nextPiece","colors","squareStart","BoardService","surface","setSolved","setNewSolution","setBoardType","getWidth","getHeight","boardsCount","k","hasOwnProperty","onBoard","touchesBoard","isTouching","faces","part","DataService","client","getPentominos","fileName","get","data","response","JSON","parse","getColors","boardShape","getSolutions","localStorage","getItem","saveSolution","setItem","stringify","DragService","dragStartPos","dragEndPos","getClientPos","event","clientX","touches","clientY","scale","startDrag","container","clientPos","setActivePentomino","registerPiece","target","offsetParent","style","zIndex","startX","offsetLeft","startY","offsetTop","doDrag","getActivePentomino","left","top","stopDrag","alignToGrid","isDragged","activePart","adjustPosition","flipRotate","isSolved","releasePentomino","resetActivePentomino","newX","Math","round","newY","setActivePentominoPosition","abs","PentominoService","taskQueue","dataService","ts","offBoardPentominos","fields","activePentomino","currentPentomino","lastTriedIndex","boardIsFull","setAllOnboard","concat","sort","a","b","setOnboard","setLastTried","indexOf","splice","setAllOffboard","slice","setOffboard","setNextLastTried","pop","allOffBoard","emptyBoard","getCurrentOffboardIndex","getOffboardCount","getNextOffboardPentomino","getOnboardPentominos","partRelPosition","partAbsPosition","partToBottom","partToRight","onOff","partsCount","setBoardFields","adjustDimensions","content","getPentominoData","getPentominoColors","color","setFace","initialDimensions","reverse","setShowSolutions","PermutationService","rotable","undefined","rotateSquareBoard","origin","shiftPieces","dx","dy","floor","maxX","maxY","offsetX","offsetY","xPos","random","yPos","SettingService","opaqueBlocks","getScale","screenWidth","boardWidth","min","SolutionService","solutionResult","isNewSolution","isNaN","rotations","solution2String","foundSolStr","solutionsCount","flip","rotation","pentomino2string","parts","SolverService","pentominosOnBoard","positionsTried","startPositionsXblock","startPosXBlock","boardHeight","findNextFit","getXBlockPosition","getNextOffBoardPentomino","currentIndex","nextIndex","xPosition","xPentomino","find","pento","movePentomino","console","log","firstEmptyPosition","findFirstEmptyPosition","isHole","offBoardCount","logBoard","isFitting","clear","table","copyBoardFields","xy","self","holeSize","minHoleSize","label","board","countDown","countLeft","countRight","sum","stashPentomino","setPosition","shiftLeft","newPosition","xShift","findFirstPartRight","offsetRight","j","PartPosValueConverter","toView","PentoFaceValueConverter","array","PentoPosValueConverter","backgroundColor"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { DragService } from './services/drag-service';\n\n@inject(DragService)\n\nexport class App {\n    constructor(dragService) {\n        this.ds = dragService;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from '../services/board-service';\n\n@inject(BoardService)\n\nexport class BoardCustomElement {\n\n    constructor(boardService) {\n        this.bs = boardService;\n    }\n\n    getBoardSizeCSS(shape) {\n        let boardType = this.bs.boardTypes[shape];\n        let css = {\n            width: boardType.w * this.bs.partSize + 'px',\n            height: boardType.h * this.bs.partSize + 'px'\n        };\n        return css;\n    }\n\n    getBoardClasses(newSolution) {\n        let classes = ['board'];\n        let solvedClass = (newSolution) ? 'solved' : '';\n        classes.push(solvedClass);\n        return classes.join(' ');\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { SettingService } from '../services/setting-service';\nimport { PentominoService } from '../services/pentomino-service';\nimport { SolutionService } from '../services/solution-service';\n\n@inject(BindingSignaler, BoardService, SettingService, PentominoService, SolutionService)\n\nexport class ControlsCustomElement {\n\n    constructor(bindingSignaler, boardService, settingService, pentominoService, solutionService) {\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.ss = settingService;\n        this.ps = pentominoService;\n        this.sls = solutionService;\n        this.solutionCount = this.sls.solutions[this.sls.boardType].length;\n    }\n\n    getIndicatorClass() {\n        let classes = ['indicator', 'rounded'];\n        let solvedClass = (this.bs.solved && !this.bs.newSolution) ? 'solved' : '';\n        classes.push(solvedClass);\n        return classes.join(' ');\n    }\n\n    getIndicatorText(currentSolution, solutionCount) {\n        let current = (currentSolution >= 0) ? 'Solution&nbsp;&nbsp;' + (currentSolution + 1) + ' / ' : 'Solutions: ';\n        let text = current + solutionCount;\n        return text;\n    }\n\n    showSolutions(count) {\n        return count > 0;\n    }\n\n    showSolution() {\n        let pentominos = this.ps.pentominos;\n        let solutionString = this.sls.solutions[this.bs.boardType][this.sls.currentSolution];\n        let splitString = solutionString.substr(1).split('#');\n        for (let i = 0; i < splitString.length; i++) {\n            let pentomino = this.ps.pentominos[i];\n            let props = splitString[i].split('_');\n            pentomino.face = parseInt(props[1], 10);\n            pentomino.position.x = parseInt(props[2], 10);\n            pentomino.position.y = parseInt(props[3], 10);\n        }\n        this.bnds.signal('position-signal');\n        this.ps.registerPieces();\n        this.bs.unsetNewSolution();\n    }\n\n    showButton() {\n        return (this.solutionCount > 0);\n    }\n\n    disableNextButton(current, count) {\n        return (current + 1 == count);\n    }\n\n    disablePreviousButton(current) {\n        return (current == 0);\n    }\n\n    showFirstSolution() {\n        this.sls.currentSolution = 0;\n        this.showSolution();\n    }\n\n    showPreviousSolution() {\n        if (this.sls.currentSolution > 0) {\n            this.sls.currentSolution--;\n            this.showSolution();\n        }\n    }\n\n    showNextSolution() {\n        if (!this.disableNextButton(this.sls.currentSolution, this.sls.solutions[this.bs.boardType].length)) {\n            this.sls.currentSolution++;\n            this.showSolution();\n        }\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from '../services/board-service';\n\n@inject(BoardService)\nexport class HeaderCustomElement {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.title = 'Pentomino';\n    }\n\n    getHeaderSizeCss(shape) {\n        let boardType = this.bs.boardTypes[shape];\n        let css = {\n            width: boardType.w * this.bs.partSize + 'px',\n        }\n        return css;\n    }\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { SolutionService } from '../services/solution-service';\nimport { PentominoService } from '../services/pentomino-service';\nimport { PermutationService } from '../services/permutation-service';\nimport { SolverService } from '../services/solver-service';\n\n@inject(BindingSignaler, BoardService, SolutionService, PentominoService, PermutationService, SolverService)\n\nexport class MenuCustomElement {\n\n    constructor(bindingSignaler, boardService, solutionService, pentominoService, permutationService, solverService) {\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.sls = solutionService;\n        this.ps = pentominoService;\n        this.prms = permutationService;\n        this.slvs = solverService;\n        this.boardTypes = Object.keys(this.bs.boardTypes);\n        this.settings = {\n            menuVisible: false,\n            submenuBoardsVisible: false\n        };\n    }\n\n    rotateBoard() {\n        this.prms.rotateBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    flipBoardYAxis() {\n        this.prms.flipBoardYAxis(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    showTheMenu() {\n        this.settings.menuVisible = true;\n        this.settings.submenuBoardsVisible = false;\n    }\n\n    mixBoard() {\n        this.prms.mixBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    hideTheMenu() {\n        this.settings.menuVisible = false;\n    }\n\n    showThisBoard(key) {\n        // let threshold = 3;\n        // if (this.sls.solutions) {\n        //     switch (key) {\n        //         case 'square':\n        //             return true;\n        //         case 'rectangle':\n        //             return this.sls.solutions['square'].length > threshold;\n        //         case 'beam':\n        //             return this.sls.solutions['rectangle'].length > threshold;\n        //         case 'stick':\n        //             return this.sls.solutions['beam'].length > threshold;\n        //         case 'twig':\n        //             return this.sls.solutions['stick'].length > threshold;\n        //         default:\n        //             return false;\n        //     }\n        // }\n        return true;\n    }\n\n    toggleSubmenuBoards() {\n        this.settings.submenuBoardsVisible = !this.settings.submenuBoardsVisible;\n        return false;\n    }\n\n    getBoardDimensions(boardType) {\n        let text = ('' + this.bs.boardTypes[boardType].w + '&nbsp;&times;&nbsp;' + this.bs.boardTypes[boardType].h);\n        return text;\n    }\n\n    getActiveBoardClass(boardType) {\n        return (this.bs.boardType == boardType) ? 'active' : '';\n    }\n\n    screenIsLargeEnough() {\n        let clw = document.querySelectorAll('html')[0].clientWidth;\n        let clh = document.querySelectorAll('html')[0].clientHeight;\n        return clw + clh > 1100;\n    }\n\n    getStartPosition(shape) {\n        this.ps.getStartPosition(shape);\n        this.ps.registerPieces();\n        this.bs.unsetSolved();\n        this.bs.unsetNewSolution();\n        this.settings.submenuBoardsVisible = false;\n        this.settings.menuVisible = false;\n    }\n\n    autoSolve() {\n        this.settings.menuVisible = false;\n        setTimeout(() => { this.slvs.autoSolve(); });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { PentominoService } from '../services/pentomino-service';\nimport { SettingService } from '../services/setting-service';\nimport { DragService } from '../services/drag-service';\n\n@inject(PentominoService, SettingService, DragService)\nexport class PentominosCustomElement {\n\n    constructor(pentominoService, settingService, dragService) {\n        this.ps = pentominoService;\n        this.ss = settingService;\n        this.ds = dragService;\n    }\n\n    getPentominoClasses(pentomino) {\n        let classes = ['pentomino'];\n        classes.push('pentomino block_' + pentomino.name);\n        if (pentomino.active) {\n            classes.push('active');\n        }\n        return classes.join(' ');\n    }\n\n    getPartClasses(pentomino, partIndex, face) {\n        let classes = ['fa', 'part'];\n        // C and T blocks don't need mirrorring around symmetric direction\n        let flipH = !(pentomino.index === 1 &&\n            pentomino.dimensions[0] > pentomino.dimensions[1] ||\n            pentomino.index === 6 &&\n            pentomino.face % 2 === 0);\n        let flipV = !(pentomino.index === 1 &&\n            pentomino.dimensions[0] < pentomino.dimensions[1] ||\n            pentomino.index === 6 &&\n            pentomino.face % 2 === 1);\n        if (partIndex === 0 && pentomino.type < 5) {\n            classes.push('fa-refresh');\n            classes.push('rotate');\n        }\n        if (partIndex === 1 && pentomino.type < 4 && flipH) {\n            classes.push('fa-arrows-h');\n            classes.push('flipH');\n        }\n        if (partIndex === 2 && pentomino.type < 4 && flipV) {\n            classes.push('fa-arrows-v');\n            classes.push('flipV');\n        }\n        return classes.join(' ');\n    }\n\n    attached() {\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { SolverService } from '../services/solver-service';\n\n@inject(SolverService)\nexport class SolvingCustomElement {\n\n    constructor(solverService) {\n        this.slvs = solverService;\n    }\n\n    continue() {\n        this.slvs.continue();\n    }\n\n    nextPiece() {\n        this.slvs.nextPiece();\n    }\n}\n","colors = [\n    {\n        \"name\": \"b\",\n        \"color\": \"midnightblue\"\n    }, {\n        \"name\": \"c\",\n        \"color\": \"darkviolet\"\n    }, {\n        \"name\": \"f\",\n        \"color\": \"darkorange\"\n    }, {\n        \"name\": \"i\",\n        \"color\": \"maroon\"\n    }, {\n        \"name\": \"l\",\n        \"color\": \"darkgreen\"\n    }, {\n        \"name\": \"n\",\n        \"color\": \"magenta\"\n    }, {\n        \"name\": \"t\",\n        \"color\": \"limegreen\"\n    }, {\n        \"name\": \"v\",\n        \"color\": \"deepskyblue\"\n    }, {\n        \"name\": \"w\",\n        \"color\": \"teal\"\n    }, {\n        \"name\": \"x\",\n        \"color\": \"red\"\n    }, {\n        \"name\": \"y\",\n        \"color\": \"gold\"\n    }, {\n        \"name\": \"z\",\n        \"color\": \"mediumblue\"\n    }, {\n        \"name\": \"o\",\n        \"color\": \"darkslategray\"\n    }\n];\n","pentominos = [\n    {\n        \"name\": \"b\",\n        \"type\": 0,\n        \"faces\": [\n            [[1, 0], [1, 1], [0, 0], [2, 0], [0, 1]],\n            [[1, 1], [1, 0], [0, 1], [0, 0], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 0], [2, 1]],\n            [[0, 1], [0, 0], [1, 1], [0, 2], [1, 2]],\n            [[1, 0], [1, 1], [0, 0], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 1], [0, 2], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [0, 0], [2, 1]],\n            [[0, 1], [0, 0], [1, 1], [0, 2], [1, 0]]\n        ],\n        \"dimensions\": [3, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"c\",\n        \"type\": 2,\n        \"faces\": [\n            [[1, 0], [0, 1], [0, 0], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 0], [1, 2], [0, 2]],\n            [[1, 1], [0, 0], [0, 1], [2, 1], [2, 0]],\n            [[0, 1], [0, 0], [1, 0], [0, 2], [1, 2]]\n        ],\n        \"dimensions\": [3, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"f\",\n        \"type\": 0,\n        \"faces\": [\n            [[1, 1], [1, 0], [0, 1], [2, 0], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [2, 2]],\n            [[1, 1], [1, 0], [2, 1], [0, 2], [1, 2]],\n            [[1, 1], [1, 2], [0, 1], [0, 0], [2, 1]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [1, 2]],\n            [[1, 1], [1, 2], [0, 1], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 1], [1, 2], [2, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [0, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"i\",\n        \"type\": 4,\n        \"faces\": [\n            [[2, 0], [0, 0], [1, 0], [3, 0], [4, 0]],\n            [[0, 2], [0, 0], [0, 1], [0, 3], [0, 4]]\n        ],\n        \"dimensions\": [5, 1],\n        \"parts\": 5\n    }, {\n        \"name\": \"l\",\n        \"type\": 0,\n        \"faces\": [\n            [[0, 0], [0, 1], [1, 0], [2, 0], [3, 0]],\n            [[1, 0], [1, 1], [0, 0], [1, 2], [1, 3]],\n            [[3, 1], [3, 0], [2, 1], [0, 1], [1, 1]],\n            [[0, 3], [0, 2], [1, 3], [0, 0], [0, 1]],\n            [[3, 0], [3, 1], [2, 0], [0, 0], [1, 0]],\n            [[1, 3], [1, 2], [0, 3], [1, 0], [1, 1]],\n            [[0, 1], [0, 0], [1, 1], [2, 1], [3, 1]],\n            [[0, 0], [0, 1], [1, 0], [0, 2], [0, 3]]\n        ],\n        \"dimensions\": [4, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"n\",\n        \"type\": 0,\n        \"faces\": [\n            [[2, 0], [2, 1], [1, 0], [0, 0], [3, 1]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [0, 3]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [3, 1]],\n            [[0, 1], [0, 2], [1, 1], [1, 0], [0, 3]],\n            [[1, 0], [1, 1], [2, 0], [0, 1], [3, 0]],\n            [[1, 1], [1, 2], [0, 1], [0, 0], [1, 3]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [3, 0]],\n            [[0, 2], [0, 1], [1, 2], [0, 0], [1, 3]]\n        ],\n        \"dimensions\": [4, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"t\",\n        \"type\": 2,\n        \"faces\": [\n            [[1, 0], [1, 1], [0, 0], [2, 0], [1, 2]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [2, 2]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [2, 2]],\n            [[0, 1], [0, 0], [1, 1], [2, 1], [0, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"v\",\n        \"type\": 1,\n        \"faces\": [\n            [[0, 2], [0, 1], [1, 2], [0, 0], [2, 2]],\n            [[0, 0], [0, 1], [1, 0], [0, 2], [2, 0]],\n            [[2, 0], [2, 1], [1, 0], [0, 0], [2, 2]],\n            [[2, 2], [2, 1], [1, 2], [0, 2], [2, 0]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"w\",\n        \"type\": 1,\n        \"faces\": [\n            [[1, 1], [1, 2], [0, 1], [0, 0], [2, 2]],\n            [[1, 1], [1, 0], [0, 1], [0, 2], [2, 0]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [2, 2]],\n            [[1, 1], [1, 2], [2, 1], [0, 2], [2, 0]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"x\",\n        \"type\": 5,\n        \"faces\": [\n            [[1, 0], [0, 1], [1, 1], [2, 1], [1, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"y\",\n        \"type\": 0,\n        \"faces\": [\n            [[0, 1], [0, 0], [1, 1], [0, 2], [0, 3]],\n            [[2, 0], [2, 1], [1, 0], [0, 0], [3, 0]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [1, 3]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [3, 1]],\n            [[1, 1], [1, 0], [0, 1], [1, 2], [1, 3]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [3, 1]],\n            [[0, 2], [0, 1], [1, 2], [0, 0], [0, 3]],\n            [[1, 0], [1, 1], [0, 0], [2, 0], [3, 0]]\n        ],\n        \"dimensions\": [2, 4],\n        \"parts\": 5\n    }, {\n        \"name\": \"z\",\n        \"type\": 3,\n        \"faces\": [\n            [[1, 1], [2, 2], [0, 1], [2, 1], [0, 0]],\n            [[1, 1], [1, 2], [0, 2], [1, 0], [2, 0]],\n            [[1, 1], [0, 2], [0, 1], [2, 0], [2, 1]],\n            [[1, 1], [1, 2], [0, 0], [1, 0], [2, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"o\",\n        \"type\": 5,\n        \"faces\": [\n            [[0, 0], [1, 0], [0, 1], [1, 1]]\n        ],\n        \"dimensions\": [2, 2],\n        \"parts\": 4\n    }\n];\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 5\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 8,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 8,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 5\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 7\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 2\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 2\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 6\n        }\n    }\n]\n","squareStart = [\n    {\n        \"name\": \"b\",\n        \"face\": 7,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"c\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 5\n        }\n    }, {\n        \"name\": \"f\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 1\n        }\n    }, {\n        \"name\": \"i\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 9\n        }\n    }, {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"n\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 7\n        }\n    }, {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 7\n        }\n    }, {\n        \"name\": \"v\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 3\n        }\n    }, {\n        \"name\": \"w\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 3\n        }\n    }, {\n        \"name\": \"y\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 5\n        }\n    }, {\n        \"name\": \"z\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 4\n        }\n    }, {\n        \"name\": \"o\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 10\n        }\n    }\n];\n","[\n    {\n        \"name\" : \"b\",\n        \"face\" : 7,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"c\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 5\n        }\n    },{\n        \"name\" : \"f\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 6,\n            \"y\" : 1\n        }\n    },{\n        \"name\" : \"i\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 9\n        }\n    },{\n        \"name\" : \"l\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 9,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"n\",\n        \"face\" : 4,\n        \"position\" : {\n            \"x\" : 6,\n            \"y\" : 7\n        }\n    },{\n        \"name\" : \"t\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 7\n        }\n    },{\n        \"name\" : \"v\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 3\n        }\n    },{\n        \"name\" : \"w\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 7,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"x\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 3\n        }\n    },{\n        \"name\" : \"y\",\n        \"face\" : 6,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 5\n        }\n    },{\n        \"name\" : \"z\",\n        \"face\" : 3,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 4\n        }\n    },{\n        \"name\" : \"o\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 7,\n            \"y\" : 10\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 12,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 12,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 5\n        }\n    }\n]\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nexport class BoardService {\n\n    constructor() {\n        this.partSize = 40;\n        this.boardType = 'square';\n        this.boardTypes = {\n            'square': {\n                w: 8,\n                h: 8,\n                surface: 64\n            },\n            'rectangle': {\n                w: 6,\n                h: 10,\n                surface: 60\n            },\n            'dozen': {\n                w: 12,\n                h: 5,\n                surface: 60\n            },\n            'beam': {\n                w: 15,\n                h: 4,\n                surface: 60\n            },\n            'stick': {\n                w: 16,\n                h: 4,\n                surface: 64\n            },\n            'twig': {\n                w: 20,\n                h: 3,\n                surface: 60\n            }\n        };\n        this.solved = false;\n        this.newSolution = false;\n    }\n\n    setSolved() {\n        this.solved = true;\n    }\n\n    unsetSolved() {\n        this.solved = false;\n    }\n\n    setNewSolution() {\n        this.newSolution = true;\n    }\n\n    unsetNewSolution() {\n        this.newSolution = false;\n    }\n\n    setBoardType(shape) {\n        this.boardType = shape;\n    }\n\n    getWidth() {\n        return this.boardTypes[this.boardType].w;\n    }\n\n    getHeight() {\n        return this.boardTypes[this.boardType].h;\n    }\n\n    boardsCount() {\n        let count = 0;\n        for (let k in this.boardTypes) if (this.boardTypes.hasOwnProperty(k)) count++;\n        return count;\n    }\n\n    onBoard(x, y) {\n        return (x >= 0) && (x < this.getWidth()) && (y >= 0) && (y < this.getHeight());\n    }\n\n    touchesBoard(pentomino) {\n        let isTouching = false;\n        for (let i = 0; i < pentomino.faces[pentomino.face].length; i++) {\n            let part = pentomino.faces[pentomino.face][i];\n            let x = pentomino.position.x + part[0];\n            let y = pentomino.position.y + part[1];\n            if ((x >= 0) && (x <= this.getWidth()) &&\n                (y >= 0) && (y <= this.getHeight())) {\n                isTouching = true;\n                break;\n            }\n        }\n        return isTouching;\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-http-client';\nimport { BoardService } from './board-service';\n\n@inject(BoardService)\n\nexport class DataService {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.client = new HttpClient();\n    }\n\n    getPentominos() {\n        let fileName = './src/data/pentominos.json';\n        return this.client.get(fileName)\n            .then((data) => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getColors() {\n        let fileName = './src/data/colors.json';\n        return this.client.get(fileName)\n            .then(data => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getStartPosition(boardShape) {\n        let fileName = './src/data/start-' + boardShape + '.json';\n        return this.client.get(fileName)\n            .then(data => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getSolutions() {\n\n        let solutions;\n\n        if (localStorage.getItem(\"pentominos2\")) {\n            solutions = JSON.parse(localStorage.getItem(\"pentominos2\"));\n        } else {\n            solutions = {};\n            let boardTypes = this.bs.boardTypes;\n            for (let type in boardTypes) {\n                if (boardTypes.hasOwnProperty(type)) {\n                    solutions[type] = [];\n                }\n            }\n        }\n        return solutions;\n    }\n\n    saveSolution(solutionString) {\n        let solutions = this.getSolutions(this.bs.boardTypes);\n        solutions[this.bs.boardType].push(solutionString);\n        localStorage.setItem(\"pentominos2\", JSON.stringify(solutions));\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { SettingService } from './setting-service';\nimport { PentominoService } from './pentomino-service';\nimport { PermutationService } from './permutation-service';\n\n@inject(BindingSignaler, SettingService, PentominoService, PermutationService)\n\nexport class DragService {\n\n    constructor(bindingSignaler, settingService, pentominoService, permutationService) {\n        this.bnds = bindingSignaler;\n        this.ss = settingService;\n        this.ps = pentominoService;\n        this.prms = permutationService;\n        this.dragStartPos = {};\n        this.dragEndPos = {};\n    }\n\n    getClientPos(event) {\n        let clientX = (event.touches) ? event.touches[0].clientX : event.clientX;\n        let clientY = (event.touches) ? event.touches[0].clientY : event.clientY;\n        return {\n            x: clientX / this.ss.scale,\n            y: clientY / this.ss.scale\n        };\n    }\n\n    startDrag(pentomino, partIndex, event) {\n        if (this.container == null) {\n            let clientPos = this.getClientPos(event);\n            this.ps.setActivePentomino(pentomino, partIndex);\n            this.ps.registerPiece(pentomino, -1);\n            this.container = event.target.offsetParent.offsetParent;\n            this.container.style.zIndex = 100;\n            this.startX = clientPos.x - this.container.offsetLeft;\n            this.startY = clientPos.y - this.container.offsetTop;\n            this.x = clientPos.x - this.startX;\n            this.y = clientPos.y - this.startY;\n            this.dragStartPos.x = this.x;\n            this.dragStartPos.y = this.y;\n        }\n        return false;\n    }\n\n    doDrag(event) {\n        let clientPos = this.getClientPos(event);\n        if (this.ps.getActivePentomino()) {\n            this.x = clientPos.x - this.startX;\n            this.y = clientPos.y - this.startY;\n            this.container.style.left = this.x + 'px';\n            this.container.style.top = this.y + 'px';\n        }\n    }\n\n    stopDrag(event) {\n        this.dragEndPos.x = this.x;\n        this.dragEndPos.y = this.y;\n        let pentomino = this.ps.getActivePentomino();\n        if (pentomino) {\n            this.alignToGrid();\n            if (!this.isDragged()) {\n                if (((pentomino.type < 4) &&\n                    (pentomino.activePart < 3)) ||\n                    ((pentomino.type == 4) && (pentomino.activePart < 1))) {\n                    this.ps.adjustPosition();\n                    this.prms.flipRotate(pentomino);\n                    this.bnds.signal('position-signal');\n                }\n            }\n            this.ps.registerPiece(pentomino, 1);\n            this.ps.isSolved();\n        }\n        this.releasePentomino();\n    }\n\n    releasePentomino() {\n        if (this.container) {\n            this.container.style.zIndex = '';\n            this.container = null;\n        }\n        this.ps.resetActivePentomino();\n    }\n\n    alignToGrid() {\n        let newX = Math.round(this.x / this.ss.partSize);\n        let newY = Math.round(this.y / this.ss.partSize);\n        this.ps.setActivePentominoPosition(newX, newY);\n        this.container.style.left = newX * this.ss.partSize + 'px';\n        this.container.style.top = newY * this.ss.partSize + 'px';\n    }\n\n    isDragged() {\n        return ((Math.abs(this.dragEndPos.x - this.dragStartPos.x) > 19) || (Math.abs(this.dragEndPos.y - this.dragStartPos.y) > 19));\n    }\n}\n","import {\n    TaskQueue,\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { DataService } from './data-service';\nimport { BoardService } from './board-service';\nimport { SolutionService } from './solution-service';\n\n@inject(BindingSignaler, TaskQueue, DataService, BoardService, SolutionService)\nexport class PentominoService {\n\n    constructor(bindingSignaler, taskQueue, dataService, boardService, solutionService) {\n\n        this.bnds = bindingSignaler;\n        this.ts = taskQueue;\n        this.ds = dataService;\n        this.bs = boardService;\n        this.sls = solutionService;\n\n        this.pentominos = [];\n        this.offBoardPentominos = [];\n        this.fields = [];\n        this.activePentomino = null;\n        this.currentPentomino = null;\n        this.lastTriedIndex = -1;\n        this.start();\n    }\n\n    isSolved() {\n        let boardIsFull = this.boardIsFull();\n        if (boardIsFull) {\n            this.bs.setSolved();\n            this.sls.saveSolution(this.pentominos);\n        } else {\n            this.bs.unsetNewSolution();\n            this.bs.unsetSolved();\n        }\n    }\n\n    boardIsFull() {\n        let h = this.bs.getHeight();\n        let w = this.bs.getWidth();\n        // console.table(this.fields);\n        for (let y = 0; y < h; y++) {\n            for (let x = 0; x < w; x++) {\n                if (this.fields[y][x] !== 1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    getActivePentomino() {\n        return this.activePentomino;\n    }\n\n    setActivePentomino(pentomino, index) {\n        this.activePentomino = pentomino;\n        this.activePentomino.activePart = index;\n    }\n\n    resetActivePentomino() {\n        if (this.activePentomino) {\n            this.activePentomino.activePart = null;\n        }\n        this.activePentomino = null;\n    }\n\n    setActivePentominoPosition(newX, newY) {\n        this.activePentomino.position.x = newX;\n        this.activePentomino.position.y = newY;\n    }\n\n    // getCurrentPentomino() {\n    //     return this.currentPentomino;\n    // }\n\n    // setCurrentPentomino(pentomino) {\n    //     this.currentPentomino = pentomino;\n    // }\n\n    // resetCurrentPentomino() {\n    //     this.currentPentomino = null;\n    // }\n\n    setAllOnboard() {\n        this.pentominos = this.pentominos.concat(this.offBoardPentominos);\n        this.pentominos.sort((a, b) => {\n            return a.index - b.index;\n        });\n        this.registerPieces();\n    }\n\n    setOnboard(pentomino, setLastTried) {\n        this.pentominos.push(pentomino);\n        let index = this.offBoardPentominos.indexOf(pentomino);\n        this.offBoardPentominos.splice(index, 1);\n        if (setLastTried) {\n            this.lastTriedIndex = index;\n        }\n        this.bnds.signal('position-signal');\n    }\n\n    setAllOffboard() {\n        this.offBoardPentominos = this.pentominos.slice();\n        this.pentominos = [];\n        this.registerPieces();\n    }\n\n    setOffboard(pentomino, setNextLastTried) {\n        this.offBoardPentominos.push(pentomino);\n        this.offBoardPentominos.splice(this.lastTriedIndex, 0, pentomino);\n        this.pentominos.pop();\n        this.registerPiece(pentomino, 1);\n        if (setNextLastTried) {\n            this.lastTriedIndex += 1;\n        }\n    }\n\n    allOffBoard() {\n        let emptyBoard = this.pentominos.length == 0;\n        return emptyBoard;\n    }\n\n    getCurrentOffboardIndex() {\n        return this.lastTriedIndex;\n    }\n\n    getOffboardCount() {\n        return this.offBoardPentominos.length;\n    }\n\n    getNextOffboardPentomino() {\n        let index = this.lastTriedIndex + 1;\n        if (this.offBoardPentominos.length > index) {\n            return this.offBoardPentominos[index];\n        } else {\n            return null;\n        }\n    }\n\n    getOnboardPentominos() {\n        return this.pentominos;\n    }\n\n    adjustPosition() {  // Thanks Ben Nierop, for the idea\n        let pentomino = this.activePentomino;\n        let partRelPosition = pentomino.faces[pentomino.face][pentomino.activePart];\n        let partAbsPosition = [\n            pentomino.position.x + partRelPosition[0],\n            pentomino.position.y + partRelPosition[1]\n        ];\n        let partToBottom = pentomino.dimensions[1] - partRelPosition[1] - 1;\n        let partToRight = pentomino.dimensions[0] - partRelPosition[0] - 1;\n        switch (pentomino.activePart) {\n            case 0:\n                pentomino.position.x = partAbsPosition[0] - partToBottom;\n                pentomino.position.y = partAbsPosition[1] - partRelPosition[0];\n                break;\n            case 1:\n                pentomino.position.x = partAbsPosition[0] - partToRight;\n                break;\n            case 2:\n                pentomino.position.y = partAbsPosition[1] - partToBottom;\n                break;\n        }\n    }\n\n    registerPiece(pentomino, onOff) {\n        if (pentomino) {\n            // let onBoardParts = 0;\n            let partsCount = pentomino.faces[pentomino.face].length;\n            for (let i = 0; i < partsCount; i++) {\n                let x = pentomino.faces[pentomino.face][i][0] + pentomino.position.x;\n                let y = pentomino.faces[pentomino.face][i][1] + pentomino.position.y;\n                if (this.bs.onBoard(x, y)) {\n                    this.fields[y][x] += onOff;\n                    // onBoardParts += 1;\n                }\n                // pentomino.onBoard = (onBoardParts == partsCount);\n            }\n            this.bnds.signal('position-signal');\n        }\n    }\n\n    registerPieces() {\n        this.fields = this.setBoardFields(0);\n        for (var i = 0; i < this.pentominos.length; i++) {\n            let pentomino = this.pentominos[i];\n            this.registerPiece(pentomino, 1);\n            this.adjustDimensions(pentomino);\n        }\n        this.bnds.signal('position-signal');\n    }\n\n    setBoardFields(content) {\n        let w = this.bs.getWidth();\n        let h = this.bs.getHeight();\n        let fields = [];\n        for (let y = 0; y < h; y++) {\n            fields.push([]);\n            for (let x = 0; x < w; x++) {\n                fields[y].push(content);\n            }\n        }\n        return fields;\n    }\n\n    start() {\n        this.getPentominoData().then((response) => {\n            this.pentominos = response;\n            this.getPentominoColors().then(() => {\n                this.getStartPosition(this.bs.boardType).then(() => {\n                    this.registerPieces();\n                    this.solved = false;\n                });\n            });\n        });\n    }\n\n    getPentominoData() {\n        return this.ds.getPentominos().then((response) => {\n            return response;\n        });\n    }\n\n    getPentominoColors() {\n        // let self = this;\n        return this.ds.getColors().then((response) => {\n            for (let i = 0; i < this.pentominos.length; i++) {\n                this.pentominos[i].color = response[i].color;\n            }\n        });\n    }\n\n    setFace(pentomino, face) {\n        pentomino.face = face;\n        this.adjustDimensions(pentomino);\n    }\n\n    adjustDimensions(pentomino) {\n        if (pentomino && pentomino.initialDimensions) {\n            pentomino.dimensions = pentomino.initialDimensions.slice();\n        }\n        if (pentomino && pentomino.face % 2 == 1) {\n            pentomino.dimensions.reverse();\n        }\n    }\n\n    getStartPosition(shape) {\n        return this.ds.getStartPosition(shape).then((response) => {\n            this.bs.boardType = shape;\n            this.sls.currentSolution = -1;\n            this.sls.setShowSolutions();\n            let count = response.length;\n            for (let i = 0; i < count; i++) {\n                let pentomino = this.pentominos[i];\n                pentomino.face = response[i].face;\n                pentomino.position = response[i].position;\n                pentomino.active = false;\n                pentomino.index = i;\n                if (!pentomino.initialDimensions) {\n                    pentomino.initialDimensions = pentomino.dimensions.slice();\n                } else {\n                    pentomino.dimensions = pentomino.initialDimensions.slice();\n                }\n                if (pentomino.face % 2 == 1) {\n                    pentomino.dimensions.reverse();\n                }\n            }\n            while (this.pentominos.length < count) {\n                this.pentominos.pop();\n            }\n            this.registerPieces();\n        });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from './board-service';\n\n@inject(BoardService)\n\nexport class PermutationService {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.rotable = [\n            [ // rotate\n                [1, 2, 3, 0, 5, 6, 7, 4], // blyfn\n                [1, 2, 3, 0], // vw\n                [1, 2, 3, 0], // tu\n                [1, 0, 3, 2], // z\n                [1, 0], // i\n                [0] // xo not necessary\n            ],\n            [ // flip around yAxis\n                [4, 7, 6, 5, 0, 3, 2, 1], // blyfn\n                [3, 2, 1, 0], // vw\n                [0, 3, 2, 1], // tu\n                [2, 3, 0, 1], // z\n                [0, 1], // i not necessary\n                [0] // xo not necessary\n            ],\n            [ // flip around xAxis\n                [6, 5, 4, 7, 2, 1, 0, 3], // blyfn\n                [1, 0, 3, 2], // vw\n                [2, 1, 0, 3], // tu\n                [2, 3, 0, 1], // z\n                [0, 1], // i not necessary\n                [0] // xo not necessary\n            ]\n        ];\n    }\n\n    // Returns the new face index for a given face, action and blocktype\n    flipRotate(pentomino, part) {\n        if (part == undefined) { part = pentomino.activePart; }\n        pentomino.face = this.rotable[part][pentomino.type][pentomino.face];\n        // switch the dimensions if pentomino is rotated;\n        if (part === 0) {\n            pentomino.dimensions.reverse();\n        }\n    }\n\n    flipBoardYAxis(pentominos) {\n        let pentomino;\n        for (let i = 0; i < pentominos.length; i++) {\n            pentomino = pentominos[i];\n            this.flipRotate(pentomino, 1);\n            pentomino.position.x = this.bs.getWidth() - pentomino.position.x - pentomino.dimensions[0];\n        }\n    }\n\n    // 90° clockwise rotation\n    rotateSquareBoard(pentominos) {\n        let pentomino;\n        let origin = {};\n        for (let i = 0; i < pentominos.length; i++) {\n            pentomino = pentominos[i];\n            // bottom left of current rectangle occupied by pentomino\n            origin.x = pentomino.position.x;\n            origin.y = pentomino.position.y + pentomino.dimensions[1];\n            // rotated position on board\n            pentomino.position.x = this.bs.getWidth() - origin.y;\n            pentomino.position.y = origin.x;\n            // rotated pentomino\n            this.flipRotate(pentomino, 0);\n        }\n    }\n\n    shiftPieces(pentominos, dx, dy) {\n        for (let i = 0; i < pentominos.length; i++) {\n            pentominos[i].position.x += dx;\n            pentominos[i].position.y += dy;\n        }\n    }\n\n    rotateBoard(pentominos) {\n        if (this.bs.boardType == 'square') {\n            this.rotateSquareBoard(pentominos);\n        } else {\n            // rotate twice and shift pentominos 4 positions down\n            for (let i = 0; i < 2; i++) this.rotateSquareBoard(pentominos);\n            this.shiftPieces(pentominos, 0, 4);\n        }\n    }\n\n    mixBoard(pentominos) {\n        let clientWidth = Math.floor(document.querySelectorAll('.dragArea')[0].clientWidth / this.bs.partSize);\n        let clientHeight = Math.floor(document.querySelectorAll('.dragArea')[0].clientHeight / this.bs.partSize);\n        let maxX = clientWidth - 4;\n        let maxY = clientHeight - 4;\n        // offset values in positions\n        let offsetX = Math.floor((clientWidth - this.bs.getWidth()) / 2);\n        let offsetY = Math.floor((clientHeight - this.bs.getHeight()) / 2);\n\n        let count = pentominos.length;\n        for (let i = 0; i < count; i++) {\n            let pentomino = pentominos[i];\n            // find random off board position\n            do {\n                let xPos = Math.floor(Math.random() * maxX);\n                xPos -= offsetX;\n                let yPos = Math.floor(Math.random() * maxY);\n\n                pentomino.position.x = xPos;\n                pentomino.position.y = yPos;\n            } while (this.bs.touchesBoard(pentomino));\n\n            let face = Math.floor(Math.random() * pentomino.faces.length);\n            pentomino.face = face;\n        }\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nexport class SettingService {\n\n    constructor() {\n        this.opaqueBlocks = true;\n        this.showSolutions = false;\n        this.scale = 1;\n        this.partSize = 40;\n        this.opaqueBlocks = false;\n    }\n\n    getScale() {\n        let screenWidth = document.querySelectorAll(\"html\")[0].clientWidth;\n        let boardWidth = document.querySelectorAll(\".board\")[0].clientWidth;\n        let scale = Math.min(screenWidth / boardWidth, 1);\n        scale = Math.floor(scale * 10) / 10;\n        this.scale = scale;\n        return {\n            'transformOrigin': 'top',\n            '-webkit-transform': 'scale(' + scale + ', ' + scale + ')',\n            '-ms-transform': 'scale(' + scale + ', ' + scale + ')',\n            'transform': 'scale(' + scale + ', ' + scale + ')'\n        };\n    };\n\n    setShowSolutions() {\n        this.showSolutions = true;\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from './board-service';\nimport { PermutationService } from './permutation-service';\nimport { DataService } from './data-service';\nimport { SettingService } from '../services/setting-service';\n\n@inject(BoardService, PermutationService, DataService, SettingService)\n\nexport class SolutionService {\n\n    constructor(boardService, permutationService, dataService, settingService) {\n        this.bs = boardService;\n        this.ds = dataService;\n        this.ss = settingService;\n        this.prms = permutationService;\n        this.boardType = this.bs.boardType;\n        this.currentSolution = -1;\n        this.getSolutions();\n    }\n\n    getSolutions() {\n        this.solutions = this.ds.getSolutions();\n        this.setShowSolutions();\n    }\n\n    setShowSolutions() {\n        this.currentSolution = -1;\n        if (this.solutions[this.bs.boardType].length > 0) {\n            this.ss.setShowSolutions();\n        }\n    }\n\n    saveSolution(pentominos) {\n        let solutionResult = this.isNewSolution(pentominos);\n        // A number indicates an existing solution\n        // A string indicate a new solution\n        if (!isNaN(solutionResult)) {\n            // show this solution\n            this.currentSolution = solutionResult;\n            this.bs.unsetNewSolution();\n        } else {\n            this.ds.saveSolution(solutionResult);\n            this.solutions[this.boardType].push(solutionResult);\n            this.currentSolution = this.solutions[this.boardType].length - 1;\n            this.bs.setNewSolution();\n        }\n    }\n\n    isNewSolution(pentominos) {\n        let isNewSolution = true;\n        let rotations = (this.boardType == 'square') ? 4 : 2;\n        let solutionString = this.solution2String(pentominos);\n        let foundSolStr = solutionString;\n        let solutionsCount = this.solutions[this.boardType].length;\n\n        // Mirror\n        for (let flip = 0; flip < 2; flip++) {\n            // Rotate\n            for (let rotation = 0; rotation < rotations; rotation++) {\n                // Existing solutions\n                for (let i = 0; i < solutionsCount; i++) {\n                    solutionString = this.solution2String(pentominos);\n                    isNewSolution = isNewSolution && (this.solutions[this.bs.boardType][i] !== solutionString);\n                    if (!isNewSolution) return i;\n                }\n                // Return to original position the last time\n                this.prms.rotateBoard(pentominos);\n            }\n            this.prms.flipBoardYAxis(pentominos);\n        }\n        return foundSolStr;\n    }\n\n    solution2String(pentominos) {\n        let solutionString = \"\";\n        let count = pentominos.length;\n        for (let i = 0; i < count; i++) {\n            let pentomino = pentominos[i];\n            solutionString += this.pentomino2string(pentomino);\n        }\n        return solutionString;\n    }\n\n    pentomino2string(pentomino) {\n        let parts = [];\n        if (pentomino) {\n            parts.push('#' + pentomino.name);\n            parts.push(pentomino.face);\n            parts.push(pentomino.position.x);\n            parts.push(pentomino.position.y);\n            return parts.join('_');\n        }\n    }\n\n}","import {\n    TaskQueue,\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { DataService } from './data-service';\nimport { BoardService } from './board-service';\nimport { PentominoService } from './pentomino-service';\nimport { SolutionService } from './solution-service';\nimport { PermutationService } from '../services/permutation-service';\n\n@inject(BindingSignaler, TaskQueue, DataService, BoardService, PentominoService, SolutionService, PermutationService)\nexport class SolverService {\n\n    constructor(bindingSignaler, taskQueue, dataService, boardService, pentominoService, solutionService, permutationService) {\n        this.bnds = bindingSignaler;\n        this.ts = taskQueue;\n        this.ds = dataService;\n        this.bs = boardService;\n        this.ps = pentominoService;\n        this.sls = solutionService;\n        this.prms = permutationService;\n        this.pentominos = this.ps.pentominos;\n        this.continue = false;\n\n        this.pentominosOnBoard = 0;\n        this.positionsTried = 0;\n        this.startPositionsXblock = {\n            'square': [\n                [1, 0],\n                [1, 1],\n                [2, 0],\n                [2, 1],\n                [2, 2]\n            ],\n            'rectangle': [\n                [1, 0],\n                [0, 1],\n                [1, 1],\n                [0, 2],\n                [1, 2],\n                [0, 3],\n                [1, 3]\n            ],\n            'dozen': [\n            ],\n            'beam': [\n            ],\n            'stick': [\n            ],\n            'twig': [\n                [1, 0],\n                [6, 0]\n            ],\n        };\n        this.startPosXBlock = 0;\n    }\n\n    autoSolve() {\n        this.boardWidth = this.bs.getWidth();\n        this.boardHeight = this.bs.getHeight();\n        this.startPosXBlock = 0;\n\n        this.ps.setAllOffboard(); // #todo only the pieces that are not on the board !!!\n\n        this.findNextFit();\n\n        this.ps.setAllOnboard();\n    }\n\n    getXBlockPosition() {\n        if (this.startPosXBlock < this.startPositionsXblock[this.bs.boardType].length) {\n            let position = this.startPositionsXblock[this.bs.boardType][this.startPosXBlock].slice();\n            this.startPosXBlock += 1;\n            return position;\n        } else {\n            return false;\n        }\n    }\n\n    getNextOffBoardPentomino(currentIndex) {\n        let nextIndex = currentIndex + 1;\n        let pentomino = this.ps.offBoardPentominos[nextIndex];\n        return pentomino;\n    }\n\n    findNextFit() {\n        this.positionsTried = 0;\n        if (this.ps.allOffBoard()) {\n            // put the x on board\n            let xPosition = this.getXBlockPosition();\n            if (xPosition) {\n                let xPentomino = this.pentominos.find((pento) => { return pento.name === 'x'; });\n                this.ps.setOnboard(xPentomino, false);\n                this.movePentomino(xPentomino, 0, xPosition, false);\n                this.findNextFit();\n                this.ps.setOffboard(xPentomino, false);\n            } else {\n                console.log('all xBlockPositions tried');\n            }\n        } else {\n            let firstEmptyPosition = this.findFirstEmptyPosition();\n            if (firstEmptyPosition) {\n                // start trying other pentominos\n                if (!this.isHole(firstEmptyPosition)) {\n                    let currentIndex = this.ps.getCurrentOffboardIndex();\n                    let offBoardCount = this.ps.getOffboardCount();\n                    while (currentIndex < offBoardCount - 1) {\n                        let pentomino = this.getNextOffBoardPentomino(currentIndex);\n                        if (pentomino) {\n                            this.ps.setOnboard(pentomino, true);\n                            for (let face = 0; face < pentomino.faces.length; face++) {\n                                this.movePentomino(pentomino, face, firstEmptyPosition, true);\n                                this.logBoard(pentomino);\n                                if (this.isFitting() && this.positionsTried < 10) {\n                                    this.findNextFit();\n                                    this.logBoard(pentomino);\n                                } // else next face or pentomino\n                            }\n                            this.ps.setOffboard(pentomino, true);\n                            this.logBoard(pentomino);\n                        }\n                        currentIndex += 1;\n                    }\n                } // else there was a hole not fitting a block\n            } else {\n                // solution found -> save it\n                let pentominos = this.ps.getOnboardPentominos();\n                this.sls.saveSolution(pentominos);\n            }\n        }\n    }\n\n    logBoard(pentomino) {\n        console.clear();\n        console.table(this.ps.fields);\n        console.log('pentomino:', pentomino, 'positions:', this.positionsTried);\n    }\n\n    findFirstEmptyPosition() {\n        for (let y = 0; y < this.boardHeight; y++) {\n            for (let x = 0; x < this.boardWidth; x++) {\n                if (this.ps.fields[y][x] === 0) return [x, y];\n            }\n        }\n        return false;\n    }\n\n    copyBoardFields() {\n        let fields = [];\n        for (let y = 0; y < this.boardHeight; y++) {\n            fields.push([]);\n            for (let x = 0; x < this.boardWidth; x++) {\n                fields[y].push(this.ps.fields[y][x]);\n            }\n        }\n        return fields;\n    }\n\n    // find out if open region at x,y is large enough for a pentomino by recursion counting\n    // xy has to be the most up left open spot\n    isHole(xy) {\n        let self = this;\n        let holeSize = 0;\n        let minHoleSize = (this.pentominos[12].onBoard || this.boardType === 'rectangle') ? 5 : 4;\n        let label = 'a';\n        let board = this.copyBoardFields();\n        // let x = xy[0];\n        let y = xy[1];\n\n        function countDown(xy) {\n            let y = xy[1];\n            while ((y < self.boardHeight) && (board[y][xy[0]] === 0) && (holeSize < minHoleSize)) {\n                board[y][xy[0]] = label;\n                holeSize++;\n                // console.table(board);\n                countLeft([xy[0] - 1, y]);\n                countRight([xy[0] + 1, y]);\n                y++;\n            }\n        }\n\n        function countRight(xy) {\n            let x = xy[0];\n            while ((x < self.boardWidth) && (board[xy[1]][x] === 0) && (holeSize < minHoleSize)) {\n                board[xy[1]][x] = label;\n                holeSize++;\n                // console.table(board);\n                countDown([x, xy[1] + 1]);\n                x++;\n            }\n        }\n\n        function countLeft(xy) {\n            let x = xy[0];\n            while ((x >= 0) && (board[xy[1]][x] === 0) && (holeSize < minHoleSize)) {\n                board[xy[1]][x] = label;\n                holeSize++;\n                // console.table(board);\n                countDown([x, xy[1] + 1]);\n                x--;\n            }\n        }\n        countRight(xy);\n        return (holeSize < minHoleSize);\n    }\n\n    // Return true if no overlapping pieces and all pieces are completely on the board\n    isFitting() {\n        let sum = 0;\n        for (let y = 0; y < this.ps.fields.length; y++) {\n            for (let x = 0; x < this.ps.fields[y].length; x++) {\n                if (this.ps.fields[y][x] > 1) {\n                    return false;\n                } else {\n                    sum += this.ps.fields[y][x];\n                }\n            }\n        }\n        if (this.pentominos[12].onBoard === true) {\n            return ((sum - 4) % 5 === 0);\n        } else {\n            return (sum % 5 === 0);\n        }\n    }\n\n    stashPentomino(pentomino) {\n        // this.ts.queueMicroTask(() => {\n        this.movePentomino(pentomino, 0, [10, 0], false);\n        pentomino.onBoard = false;\n        // });\n        // this.logBoard();\n    }\n\n    setPosition(pentomino, position) {\n        // this.ts.queueMicroTask(() => {\n        pentomino.position.x = position[0];\n        pentomino.position.y = position[1];\n        // });\n    }\n\n    movePentomino(pentomino, face, position, shiftLeft) {\n        let newPosition;\n        // If left top of pentomino is empty ___|\n        // move pentomino to the left\n        if (shiftLeft && position[0] > 0) {\n            let xShift = this.findFirstPartRight(pentomino);\n            newPosition = [position[0] - xShift, position[1]];\n        } else {\n            newPosition = position;\n        }\n        this.ps.registerPiece(pentomino, -1);\n        this.ps.setFace(pentomino, face);\n        this.setPosition(pentomino, newPosition);\n        this.ps.registerPiece(pentomino, 1);\n        // console.table($scope.board.fields);\n    }\n\n    findFirstPartRight(pentomino) {\n        let offsetRight = pentomino.dimensions[0];\n        let part = pentomino.faces[pentomino.face][0];\n        for (let j = 0; j < pentomino.faces[pentomino.face].length; j++) {\n            part = pentomino.faces[pentomino.face][j];\n            offsetRight = ((part[1] === 0) && (part[0] < offsetRight)) ? part[0] : offsetRight;\n        }\n        return offsetRight;\n    }\n\n\n}\n","export class PartPosValueConverter {\n    toView(css, config) {\n        css = {\n            left: config.x * config.partSize + 'px',\n            top: config.y * config.partSize + 'px'\n        };\n        return css;\n    }\n}","export class PentoFaceValueConverter {\n    toView(array, config) {\n        array = config.faces[config.face];\n        return array;\n    }\n}","export class PentoPosValueConverter {\n    toView(css, config) {\n        css = {\n            left: config.x * config.partSize + 'px',\n            top: config.y * config.partSize + 'px',\n            backgroundColor: config.color\n        };\n        return css;\n    }\n}"],"sourceRoot":"../src"}