{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/controls.js","components/header.js","components/menu.js","components/pentominos.js","components/solving.js","data/colors.js","data/pentominos.js","data/start-beam.js","data/start-dozen.js","data/start-rectangle.js","data/start-square.js","data/start-stick.js","data/start-twig.js","resources/index.js","services/board-service.js","services/data-service.js","services/drag-service.js","services/pentomino-service.js","services/permutation-service.js","services/setting-service.js","services/solution-service.js","services/solver-service.js","services/solver-worker.js","resources/value-converters/part-pos-value-converter.js","resources/value-converters/pento-face-value-converter.js","resources/value-converters/pento-pos-value-converter.js"],"names":["App","dragService","ds","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","boardService","bs","getBoardSizeCSS","shape","boardType","boardTypes","css","width","w","partSize","height","h","getBoardClasses","newSolution","classes","solvedClass","push","join","ControlsCustomElement","bindingSignaler","settingService","pentominoService","solutionService","bnds","ss","ps","sls","solutionCount","solutions","length","getIndicatorClass","solved","getIndicatorText","currentSolution","current","text","showSolutions","count","showSolution","pentominos","solutionString","splitString","substr","split","i","pentomino","props","face","parseInt","position","x","y","signal","registerPieces","unsetNewSolution","showButton","disableNextButton","disablePreviousButton","showFirstSolution","showPreviousSolution","showNextSolution","HeaderCustomElement","title","getHeaderSizeCss","MenuCustomElement","permutationService","solverService","prms","slvs","Object","keys","settings","menuVisible","submenuBoardsVisible","rotateBoard","flipBoardYAxis","showTheMenu","mixBoard","hideTheMenu","showThisBoard","key","toggleSubmenuBoards","getBoardDimensions","getActiveBoardClass","screenIsLargeEnough","clw","document","querySelectorAll","clientWidth","clh","clientHeight","getStartPosition","unsetSolved","workersSupported","window","Worker","autoSolve","setTimeout","startSolving","PentominosCustomElement","getPentominoClasses","name","active","getPartClasses","partIndex","flipH","index","dimensions","flipV","type","attached","SolvingCustomElement","continue","nextPiece","colors","squareStart","BoardService","surface","setSolved","setNewSolution","setBoardType","getWidth","getHeight","boardsCount","k","hasOwnProperty","onBoard","touchesBoard","isTouching","faces","part","partIsOnBoard","DataService","client","getPentominos","fileName","get","data","response","JSON","parse","getColors","boardShape","getSolutions","localStorage","getItem","saveSolution","setItem","stringify","DragService","dragStartPos","dragEndPos","getClientPos","event","clientX","touches","clientY","scale","startDrag","container","clientPos","setActivePentomino","registerPiece","target","offsetParent","style","zIndex","startX","offsetLeft","startY","offsetTop","doDrag","getActivePentomino","left","top","stopDrag","alignToGrid","isDragged","activePart","adjustPosition","flipRotate","isSolved","releasePentomino","resetActivePentomino","newX","Math","round","newY","setActivePentominoPosition","abs","PentominoService","dataService","offBoardPentominos","fields","activePentomino","boardIsFull","findPentominoByName","set","find","pento","allOffBoard","emptyBoard","getPentomino","concat","oPentominoOnboard","filter","setAllOnboard","onBoards","offBoards","sortPentominos","pentos","sort","a","b","setOnboard","indexOf","splice","nextOnboard","shift","setOffboardPentominos","setPosition","findFirstPartRight","offsetRight","j","movePentomino","shiftLeft","newPosition","setFace","xShift","partRelPosition","partAbsPosition","partToBottom","partToRight","onOff","onBoardParts","partsCount","setBoardFields","adjustDimensions","content","getPentominoData","getPentominoColors","color","initialDimensions","slice","reverse","setShowSolutions","pop","PermutationService","rotable","undefined","rotateSquareBoard","origin","shiftPieces","dx","dy","floor","maxX","maxY","offsetX","random","xPos","yPos","SettingService","opaqueBlocks","getScale","screenWidth","boardWidth","min","SolutionService","solutionResult","isNewSolution","isNaN","rotations","solution2String","foundSolStr","solutionsCount","flip","rotation","pentomino2string","parts","SolverService","pentominosOnBoard","positionsTried","startPositionsXblock","startPosXBlock","xPentomino","slvrWrkr","getXBlockPosition","discard","misFits","signalViewUpdate","findNextFit","firstEmptyPosition","findFirstEmptyPosition","holeFitsXPieces","console","clear","log","logBoard","isFitting","xPosition","boardHeight","workerData","postMessage","onmessage","e","blockCount","partCount","table","copyBoardFields","xy","self","holeSize","oPentoOnboard","label","board","countDown","countLeft","countRight","countUp","holeFits","sum","compensation","noneStickingOut","PartPosValueConverter","toView","PentoFaceValueConverter","array","PentoPosValueConverter","backgroundColor"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { DragService } from './services/drag-service';\n\n@inject(DragService)\n\nexport class App {\n    constructor(dragService) {\n        this.ds = dragService;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from '../services/board-service';\n\n@inject(BoardService)\n\nexport class BoardCustomElement {\n\n    constructor(boardService) {\n        this.bs = boardService;\n    }\n\n    getBoardSizeCSS(shape) {\n        let boardType = this.bs.boardTypes[shape];\n        let css = {\n            width: boardType.w * this.bs.partSize + 'px',\n            height: boardType.h * this.bs.partSize + 'px'\n        };\n        return css;\n    }\n\n    getBoardClasses(newSolution) {\n        let classes = ['board'];\n        let solvedClass = (newSolution) ? 'solved' : '';\n        classes.push(solvedClass);\n        return classes.join(' ');\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { SettingService } from '../services/setting-service';\nimport { PentominoService } from '../services/pentomino-service';\nimport { SolutionService } from '../services/solution-service';\n\n@inject(BindingSignaler, BoardService, SettingService, PentominoService, SolutionService)\n\nexport class ControlsCustomElement {\n\n    constructor(bindingSignaler, boardService, settingService, pentominoService, solutionService) {\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.ss = settingService;\n        this.ps = pentominoService;\n        this.sls = solutionService;\n        this.solutionCount = this.sls.solutions[this.sls.boardType].length;\n    }\n\n    getIndicatorClass() {\n        let classes = ['indicator', 'rounded'];\n        let solvedClass = (this.bs.solved && !this.bs.newSolution) ? 'solved' : '';\n        classes.push(solvedClass);\n        return classes.join(' ');\n    }\n\n    getIndicatorText(currentSolution, solutionCount) {\n        let current = (currentSolution >= 0) ? 'Solution&nbsp;&nbsp;' + (currentSolution + 1) + ' / ' : 'Solutions: ';\n        let text = current + solutionCount;\n        return text;\n    }\n\n    showSolutions(count) {\n        return count > 0;\n    }\n\n    showSolution() {\n        let pentominos = this.ps.pentominos;\n        let solutionString = this.sls.solutions[this.bs.boardType][this.sls.currentSolution];\n        let splitString = solutionString.substr(1).split('#');\n        for (let i = 0; i < splitString.length; i++) {\n            let pentomino = this.ps.pentominos[i];\n            let props = splitString[i].split('_');\n            pentomino.face = parseInt(props[1], 10);\n            pentomino.position.x = parseInt(props[2], 10);\n            pentomino.position.y = parseInt(props[3], 10);\n        }\n        this.bnds.signal('position-signal');\n        this.ps.registerPieces();\n        this.bs.unsetNewSolution();\n    }\n\n    showButton() {\n        return (this.solutionCount > 0);\n    }\n\n    disableNextButton(current, count) {\n        return (current + 1 == count);\n    }\n\n    disablePreviousButton(current) {\n        return (current == 0);\n    }\n\n    showFirstSolution() {\n        this.sls.currentSolution = 0;\n        this.showSolution();\n    }\n\n    showPreviousSolution() {\n        if (this.sls.currentSolution > 0) {\n            this.sls.currentSolution--;\n            this.showSolution();\n        }\n    }\n\n    showNextSolution() {\n        if (!this.disableNextButton(this.sls.currentSolution, this.sls.solutions[this.bs.boardType].length)) {\n            this.sls.currentSolution++;\n            this.showSolution();\n        }\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from '../services/board-service';\n\n@inject(BoardService)\nexport class HeaderCustomElement {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.title = 'Pentomino';\n    }\n\n    getHeaderSizeCss(shape) {\n        let boardType = this.bs.boardTypes[shape];\n        let css = {\n            width: boardType.w * this.bs.partSize + 'px',\n        }\n        return css;\n    }\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { SolutionService } from '../services/solution-service';\nimport { PentominoService } from '../services/pentomino-service';\nimport { PermutationService } from '../services/permutation-service';\nimport { SolverService } from '../services/solver-service';\n\n@inject(BindingSignaler, BoardService, SolutionService, PentominoService, PermutationService, SolverService)\n\nexport class MenuCustomElement {\n\n    constructor(bindingSignaler, boardService, solutionService, pentominoService, permutationService, solverService) {\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.sls = solutionService;\n        this.ps = pentominoService;\n        this.prms = permutationService;\n        this.slvs = solverService;\n        this.boardTypes = Object.keys(this.bs.boardTypes);\n        this.settings = {\n            menuVisible: false,\n            submenuBoardsVisible: false\n        };\n    }\n\n    rotateBoard() {\n        this.prms.rotateBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    flipBoardYAxis() {\n        this.prms.flipBoardYAxis(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    showTheMenu() {\n        this.settings.menuVisible = true;\n        this.settings.submenuBoardsVisible = false;\n    }\n\n    mixBoard() {\n        this.prms.mixBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    hideTheMenu() {\n        this.settings.menuVisible = false;\n    }\n\n    showThisBoard(key) {\n        // let threshold = 3;\n        // if (this.sls.solutions) {\n        //     switch (key) {\n        //         case 'square':\n        //             return true;\n        //         case 'rectangle':\n        //             return this.sls.solutions['square'].length > threshold;\n        //         case 'beam':\n        //             return this.sls.solutions['rectangle'].length > threshold;\n        //         case 'stick':\n        //             return this.sls.solutions['beam'].length > threshold;\n        //         case 'twig':\n        //             return this.sls.solutions['stick'].length > threshold;\n        //         default:\n        //             return false;\n        //     }\n        // }\n        return true;\n    }\n\n    toggleSubmenuBoards() {\n        this.settings.submenuBoardsVisible = !this.settings.submenuBoardsVisible;\n        return false;\n    }\n\n    getBoardDimensions(boardType) {\n        let text = ('' + this.bs.boardTypes[boardType].w + '&nbsp;&times;&nbsp;' + this.bs.boardTypes[boardType].h);\n        return text;\n    }\n\n    getActiveBoardClass(boardType) {\n        return (this.bs.boardType == boardType) ? 'active' : '';\n    }\n\n    screenIsLargeEnough() {\n        let clw = document.querySelectorAll('html')[0].clientWidth;\n        let clh = document.querySelectorAll('html')[0].clientHeight;\n        return clw + clh > 1100;\n    }\n\n    getStartPosition(shape) {\n        this.ps.getStartPosition(shape);\n        this.ps.registerPieces();\n        this.bs.unsetSolved();\n        this.bs.unsetNewSolution();\n        this.settings.submenuBoardsVisible = false;\n        this.settings.menuVisible = false;\n    }\n\n    workersSupported() {\n        if (window.Worker) {\n            return true;\n        }\n        return false;\n    }\n\n    autoSolve() {\n        this.settings.menuVisible = false;\n        setTimeout(() => { this.slvs.startSolving(); });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { PentominoService } from '../services/pentomino-service';\nimport { SettingService } from '../services/setting-service';\nimport { DragService } from '../services/drag-service';\n\n@inject(PentominoService, SettingService, DragService)\nexport class PentominosCustomElement {\n\n    constructor(pentominoService, settingService, dragService) {\n        this.ps = pentominoService;\n        this.ss = settingService;\n        this.ds = dragService;\n    }\n\n    getPentominoClasses(pentomino) {\n        let classes = ['pentomino'];\n        classes.push('pentomino block_' + pentomino.name);\n        if (pentomino.active) {\n            classes.push('active');\n        }\n        return classes.join(' ');\n    }\n\n    getPartClasses(pentomino, partIndex, face) {\n        let classes = ['fa', 'part'];\n        // C and T blocks don't need mirrorring around symmetric direction\n        let flipH = !(pentomino.index === 1 &&\n            pentomino.dimensions[0] > pentomino.dimensions[1] ||\n            pentomino.index === 6 &&\n            pentomino.face % 2 === 0);\n        let flipV = !(pentomino.index === 1 &&\n            pentomino.dimensions[0] < pentomino.dimensions[1] ||\n            pentomino.index === 6 &&\n            pentomino.face % 2 === 1);\n        if (partIndex === 0 && pentomino.type < 5) {\n            classes.push('fa-refresh');\n            classes.push('rotate');\n        }\n        if (partIndex === 1 && pentomino.type < 4 && flipH) {\n            classes.push('fa-arrows-h');\n            classes.push('flipH');\n        }\n        if (partIndex === 2 && pentomino.type < 4 && flipV) {\n            classes.push('fa-arrows-v');\n            classes.push('flipV');\n        }\n        return classes.join(' ');\n    }\n\n    attached() {\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { SolverService } from '../services/solver-service';\n\n@inject(SolverService)\nexport class SolvingCustomElement {\n\n    constructor(solverService) {\n        this.slvs = solverService;\n    }\n\n    continue() {\n        this.slvs.continue();\n    }\n\n    nextPiece() {\n        this.slvs.nextPiece();\n    }\n}\n","colors = [\n    {\n        \"name\": \"b\",\n        \"color\": \"midnightblue\"\n    }, {\n        \"name\": \"c\",\n        \"color\": \"darkviolet\"\n    }, {\n        \"name\": \"f\",\n        \"color\": \"darkorange\"\n    }, {\n        \"name\": \"i\",\n        \"color\": \"maroon\"\n    }, {\n        \"name\": \"l\",\n        \"color\": \"darkgreen\"\n    }, {\n        \"name\": \"n\",\n        \"color\": \"magenta\"\n    }, {\n        \"name\": \"t\",\n        \"color\": \"limegreen\"\n    }, {\n        \"name\": \"v\",\n        \"color\": \"deepskyblue\"\n    }, {\n        \"name\": \"w\",\n        \"color\": \"teal\"\n    }, {\n        \"name\": \"x\",\n        \"color\": \"red\"\n    }, {\n        \"name\": \"y\",\n        \"color\": \"gold\"\n    }, {\n        \"name\": \"z\",\n        \"color\": \"mediumblue\"\n    }, {\n        \"name\": \"o\",\n        \"color\": \"darkslategray\"\n    }\n];\n","pentominos = [\n    {\n        \"name\": \"b\",\n        \"type\": 0,\n        \"faces\": [\n            [[1, 0], [1, 1], [0, 0], [2, 0], [0, 1]],\n            [[1, 1], [1, 0], [0, 1], [0, 0], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 0], [2, 1]],\n            [[0, 1], [0, 0], [1, 1], [0, 2], [1, 2]],\n            [[1, 0], [1, 1], [0, 0], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 1], [0, 2], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [0, 0], [2, 1]],\n            [[0, 1], [0, 0], [1, 1], [0, 2], [1, 0]]\n        ],\n        \"dimensions\": [3, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"c\",\n        \"type\": 2,\n        \"faces\": [\n            [[1, 0], [0, 1], [0, 0], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 0], [1, 2], [0, 2]],\n            [[1, 1], [0, 0], [0, 1], [2, 1], [2, 0]],\n            [[0, 1], [0, 0], [1, 0], [0, 2], [1, 2]]\n        ],\n        \"dimensions\": [3, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"f\",\n        \"type\": 0,\n        \"faces\": [\n            [[1, 1], [1, 0], [0, 1], [2, 0], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [2, 2]],\n            [[1, 1], [1, 0], [2, 1], [0, 2], [1, 2]],\n            [[1, 1], [1, 2], [0, 1], [0, 0], [2, 1]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [1, 2]],\n            [[1, 1], [1, 2], [0, 1], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 1], [1, 2], [2, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [0, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"i\",\n        \"type\": 4,\n        \"faces\": [\n            [[2, 0], [0, 0], [1, 0], [3, 0], [4, 0]],\n            [[0, 2], [0, 0], [0, 1], [0, 3], [0, 4]]\n        ],\n        \"dimensions\": [5, 1],\n        \"parts\": 5\n    }, {\n        \"name\": \"l\",\n        \"type\": 0,\n        \"faces\": [\n            [[0, 0], [0, 1], [1, 0], [2, 0], [3, 0]],\n            [[1, 0], [1, 1], [0, 0], [1, 2], [1, 3]],\n            [[3, 1], [3, 0], [2, 1], [0, 1], [1, 1]],\n            [[0, 3], [0, 2], [1, 3], [0, 0], [0, 1]],\n            [[3, 0], [3, 1], [2, 0], [0, 0], [1, 0]],\n            [[1, 3], [1, 2], [0, 3], [1, 0], [1, 1]],\n            [[0, 1], [0, 0], [1, 1], [2, 1], [3, 1]],\n            [[0, 0], [0, 1], [1, 0], [0, 2], [0, 3]]\n        ],\n        \"dimensions\": [4, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"n\",\n        \"type\": 0,\n        \"faces\": [\n            [[2, 0], [2, 1], [1, 0], [0, 0], [3, 1]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [0, 3]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [3, 1]],\n            [[0, 1], [0, 2], [1, 1], [1, 0], [0, 3]],\n            [[1, 0], [1, 1], [2, 0], [0, 1], [3, 0]],\n            [[1, 1], [1, 2], [0, 1], [0, 0], [1, 3]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [3, 0]],\n            [[0, 2], [0, 1], [1, 2], [0, 0], [1, 3]]\n        ],\n        \"dimensions\": [4, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"t\",\n        \"type\": 2,\n        \"faces\": [\n            [[1, 0], [1, 1], [0, 0], [2, 0], [1, 2]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [2, 2]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [2, 2]],\n            [[0, 1], [0, 0], [1, 1], [2, 1], [0, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"v\",\n        \"type\": 1,\n        \"faces\": [\n            [[0, 2], [0, 1], [1, 2], [0, 0], [2, 2]],\n            [[0, 0], [0, 1], [1, 0], [0, 2], [2, 0]],\n            [[2, 0], [2, 1], [1, 0], [0, 0], [2, 2]],\n            [[2, 2], [2, 1], [1, 2], [0, 2], [2, 0]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"w\",\n        \"type\": 1,\n        \"faces\": [\n            [[1, 1], [1, 2], [0, 1], [0, 0], [2, 2]],\n            [[1, 1], [1, 0], [0, 1], [0, 2], [2, 0]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [2, 2]],\n            [[1, 1], [1, 2], [2, 1], [0, 2], [2, 0]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"x\",\n        \"type\": 5,\n        \"faces\": [\n            [[1, 0], [0, 1], [1, 1], [2, 1], [1, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"y\",\n        \"type\": 0,\n        \"faces\": [\n            [[0, 1], [0, 0], [1, 1], [0, 2], [0, 3]],\n            [[2, 0], [2, 1], [1, 0], [0, 0], [3, 0]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [1, 3]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [3, 1]],\n            [[1, 1], [1, 0], [0, 1], [1, 2], [1, 3]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [3, 1]],\n            [[0, 2], [0, 1], [1, 2], [0, 0], [0, 3]],\n            [[1, 0], [1, 1], [0, 0], [2, 0], [3, 0]]\n        ],\n        \"dimensions\": [2, 4],\n        \"parts\": 5\n    }, {\n        \"name\": \"z\",\n        \"type\": 3,\n        \"faces\": [\n            [[1, 1], [2, 2], [0, 1], [2, 1], [0, 0]],\n            [[1, 1], [1, 2], [0, 2], [1, 0], [2, 0]],\n            [[1, 1], [0, 2], [0, 1], [2, 0], [2, 1]],\n            [[1, 1], [1, 2], [0, 0], [1, 0], [2, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"o\",\n        \"type\": 5,\n        \"faces\": [\n            [[0, 0], [1, 0], [0, 1], [1, 1]]\n        ],\n        \"dimensions\": [2, 2],\n        \"parts\": 4\n    }\n];\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 5\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 8,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 8,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 5\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 7\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 2\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 2\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 6\n        }\n    }\n]\n","squareStart = [\n    {\n        \"name\": \"b\",\n        \"face\": 7,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"c\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 5\n        }\n    }, {\n        \"name\": \"f\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 1\n        }\n    }, {\n        \"name\": \"i\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 9\n        }\n    }, {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"n\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 7\n        }\n    }, {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 7\n        }\n    }, {\n        \"name\": \"v\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 3\n        }\n    }, {\n        \"name\": \"w\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 3\n        }\n    }, {\n        \"name\": \"y\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 5\n        }\n    }, {\n        \"name\": \"z\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 4\n        }\n    }, {\n        \"name\": \"o\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 10\n        }\n    }\n];\n","[\n    {\n        \"name\" : \"b\",\n        \"face\" : 7,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"c\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 5\n        }\n    },{\n        \"name\" : \"f\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 6,\n            \"y\" : 1\n        }\n    },{\n        \"name\" : \"i\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 9\n        }\n    },{\n        \"name\" : \"l\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 9,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"n\",\n        \"face\" : 4,\n        \"position\" : {\n            \"x\" : 6,\n            \"y\" : 7\n        }\n    },{\n        \"name\" : \"t\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 7\n        }\n    },{\n        \"name\" : \"v\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 3\n        }\n    },{\n        \"name\" : \"w\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 7,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"x\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 3\n        }\n    },{\n        \"name\" : \"y\",\n        \"face\" : 6,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 5\n        }\n    },{\n        \"name\" : \"z\",\n        \"face\" : 3,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 4\n        }\n    },{\n        \"name\" : \"o\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 7,\n            \"y\" : 10\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 12,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 12,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 5\n        }\n    }\n]\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nexport class BoardService {\n\n    constructor() {\n        this.partSize = 40;\n        this.boardType = 'square';\n        this.boardTypes = {\n            'square': {\n                w: 8,\n                h: 8,\n                surface: 64\n            },\n            'rectangle': {\n                w: 6,\n                h: 10,\n                surface: 60\n            },\n            'dozen': {\n                w: 12,\n                h: 5,\n                surface: 60\n            },\n            'beam': {\n                w: 15,\n                h: 4,\n                surface: 60\n            },\n            'stick': {\n                w: 16,\n                h: 4,\n                surface: 64\n            },\n            'twig': {\n                w: 20,\n                h: 3,\n                surface: 60\n            }\n        };\n        this.solved = false;\n        this.newSolution = false;\n    }\n\n    setSolved() {\n        this.solved = true;\n    }\n\n    unsetSolved() {\n        this.solved = false;\n    }\n\n    setNewSolution() {\n        this.newSolution = true;\n    }\n\n    unsetNewSolution() {\n        this.newSolution = false;\n    }\n\n    setBoardType(shape) {\n        this.boardType = shape;\n    }\n\n    getWidth() {\n        return this.boardTypes[this.boardType].w;\n    }\n\n    getHeight() {\n        return this.boardTypes[this.boardType].h;\n    }\n\n    boardsCount() {\n        let count = 0;\n        for (let k in this.boardTypes) if (this.boardTypes.hasOwnProperty(k)) count++;\n        return count;\n    }\n\n    onBoard(x, y) {\n        return (x >= 0) && (x < this.getWidth()) && (y >= 0) && (y < this.getHeight());\n    }\n\n    touchesBoard(pentomino) {\n        let isTouching = false;\n        const count = pentomino.faces[pentomino.face].length;\n        for (let i = 0; i < count; i++) {\n            const part = pentomino.faces[pentomino.face][i];\n            const x = pentomino.position.x + part[0];\n            const y = pentomino.position.y + part[1];\n            const partIsOnBoard = this.onBoard(x, y);\n            if (partIsOnBoard) {\n                isTouching = true;\n                break;\n            }\n        }\n        return isTouching;\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-http-client';\nimport { BoardService } from './board-service';\n\n@inject(BoardService)\n\nexport class DataService {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.client = new HttpClient();\n    }\n\n    getPentominos() {\n        let fileName = './src/data/pentominos.json';\n        return this.client.get(fileName)\n            .then((data) => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getColors() {\n        let fileName = './src/data/colors.json';\n        return this.client.get(fileName)\n            .then(data => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getStartPosition(boardShape) {\n        let fileName = './src/data/start-' + boardShape + '.json';\n        return this.client.get(fileName)\n            .then(data => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getSolutions() {\n\n        let solutions;\n\n        if (localStorage.getItem(\"pentominos2\")) {\n            solutions = JSON.parse(localStorage.getItem(\"pentominos2\"));\n        } else {\n            solutions = {};\n            let boardTypes = this.bs.boardTypes;\n            for (let type in boardTypes) {\n                if (boardTypes.hasOwnProperty(type)) {\n                    solutions[type] = [];\n                }\n            }\n        }\n        return solutions;\n    }\n\n    saveSolution(solutionString) {\n        let solutions = this.getSolutions(this.bs.boardTypes);\n        solutions[this.bs.boardType].push(solutionString);\n        localStorage.setItem(\"pentominos2\", JSON.stringify(solutions));\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { SettingService } from './setting-service';\nimport { PentominoService } from './pentomino-service';\nimport { PermutationService } from './permutation-service';\n\n@inject(BindingSignaler, SettingService, PentominoService, PermutationService)\n\nexport class DragService {\n\n    constructor(bindingSignaler, settingService, pentominoService, permutationService) {\n        this.bnds = bindingSignaler;\n        this.ss = settingService;\n        this.ps = pentominoService;\n        this.prms = permutationService;\n        this.dragStartPos = {};\n        this.dragEndPos = {};\n    }\n\n    getClientPos(event) {\n        let clientX = (event.touches) ? event.touches[0].clientX : event.clientX;\n        let clientY = (event.touches) ? event.touches[0].clientY : event.clientY;\n        return {\n            x: clientX / this.ss.scale,\n            y: clientY / this.ss.scale\n        };\n    }\n\n    startDrag(pentomino, partIndex, event) {\n        if (this.container == null) {\n            let clientPos = this.getClientPos(event);\n            this.ps.setActivePentomino(pentomino, partIndex);\n            this.ps.registerPiece(pentomino, -1);\n            this.container = event.target.offsetParent.offsetParent;\n            this.container.style.zIndex = 100;\n            this.startX = clientPos.x - this.container.offsetLeft;\n            this.startY = clientPos.y - this.container.offsetTop;\n            this.x = clientPos.x - this.startX;\n            this.y = clientPos.y - this.startY;\n            this.dragStartPos.x = this.x;\n            this.dragStartPos.y = this.y;\n        }\n        return false;\n    }\n\n    doDrag(event) {\n        let clientPos = this.getClientPos(event);\n        if (this.ps.getActivePentomino()) {\n            this.x = clientPos.x - this.startX;\n            this.y = clientPos.y - this.startY;\n            this.container.style.left = this.x + 'px';\n            this.container.style.top = this.y + 'px';\n        }\n    }\n\n    stopDrag(event) {\n        this.dragEndPos.x = this.x;\n        this.dragEndPos.y = this.y;\n        let pentomino = this.ps.getActivePentomino();\n        if (pentomino) {\n            this.alignToGrid();\n            if (!this.isDragged()) {\n                if (((pentomino.type < 4) &&\n                    (pentomino.activePart < 3)) ||\n                    ((pentomino.type == 4) && (pentomino.activePart < 1))) {\n                    this.ps.adjustPosition();\n                    this.prms.flipRotate(pentomino);\n                    this.bnds.signal('position-signal');\n                }\n            }\n            this.ps.registerPiece(pentomino, 1);\n            this.ps.isSolved();\n        }\n        this.releasePentomino();\n    }\n\n    releasePentomino() {\n        if (this.container) {\n            this.container.style.zIndex = '';\n            this.container = null;\n        }\n        this.ps.resetActivePentomino();\n    }\n\n    alignToGrid() {\n        let newX = Math.round(this.x / this.ss.partSize);\n        let newY = Math.round(this.y / this.ss.partSize);\n        this.ps.setActivePentominoPosition(newX, newY);\n        this.container.style.left = newX * this.ss.partSize + 'px';\n        this.container.style.top = newY * this.ss.partSize + 'px';\n    }\n\n    isDragged() {\n        return ((Math.abs(this.dragEndPos.x - this.dragStartPos.x) > 19) || (Math.abs(this.dragEndPos.y - this.dragStartPos.y) > 19));\n    }\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { DataService } from './data-service';\nimport { BoardService } from './board-service';\nimport { SolutionService } from './solution-service';\n\n@inject(BindingSignaler, DataService, BoardService, SolutionService)\nexport class PentominoService {\n\n    constructor(bindingSignaler, dataService, boardService, solutionService) {\n\n        this.bnds = bindingSignaler;\n        this.ds = dataService;\n        this.bs = boardService;\n        this.sls = solutionService;\n\n        this.pentominos = [];\n        this.offBoardPentominos = [];\n        this.fields = [];\n        this.activePentomino = null;\n        this.start();\n    }\n\n    isSolved() {\n        let boardIsFull = this.boardIsFull();\n        if (boardIsFull) {\n            this.bs.setSolved();\n            this.sls.saveSolution(this.pentominos);\n        } else {\n            this.bs.unsetNewSolution();\n            this.bs.unsetSolved();\n        }\n    }\n\n    boardIsFull() {\n        let h = this.bs.getHeight();\n        let w = this.bs.getWidth();\n        // console.table(this.fields);\n        for (let y = 0; y < h; y++) {\n            for (let x = 0; x < w; x++) {\n                if (this.fields[y][x] !== 1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    getActivePentomino() {\n        return this.activePentomino;\n    }\n\n    setActivePentomino(pentomino, index) {\n        this.activePentomino = pentomino;\n        this.activePentomino.activePart = index;\n    }\n\n    resetActivePentomino() {\n        if (this.activePentomino) {\n            this.activePentomino.activePart = null;\n        }\n        this.activePentomino = null;\n    }\n\n    setActivePentominoPosition(newX, newY) {\n        this.activePentomino.position.x = newX;\n        this.activePentomino.position.y = newY;\n    }\n\n    findPentominoByName(set, name) {\n        return set.find((pento) => { return pento.name === name; });\n    }\n\n    allOffBoard() {\n        let emptyBoard = this.pentominos.length == 0;\n        return emptyBoard;\n    }\n\n    getPentomino(name) {\n        let pentomino = this.findPentominoByName(this.pentominos.concat(this.offBoardPentominos), name);\n        return pentomino;\n    }\n\n    oPentominoOnboard() {\n        return this.pentominos.filter((pento) => {\n            return pento.name === 'o';\n        }).length > 0;\n    }\n\n    setAllOnboard(onBoards, offBoards) {\n        this.pentominos = onBoards.concat(offBoards);\n        this.pentominos = this.sortPentominos(this.pentominos);\n        this.registerPieces();\n    }\n\n    sortPentominos(pentos) {\n        pentos.sort((a, b) => {\n            return a.index - b.index;\n        });\n        return pentos;\n    }\n\n    setOnboard(pentomino) {\n        this.pentominos.push(pentomino);\n        let index = this.offBoardPentominos.indexOf(pentomino);\n        this.offBoardPentominos.splice(index, 1);\n    }\n\n    nextOnboard(offBoards) {\n        let pentomino = offBoards.shift();\n        pentomino.onBoard = true;\n        this.pentominos.push(pentomino);\n        this.registerPiece(pentomino, 1);\n        this.bnds.signal('position-signal');\n        return pentomino;\n    }\n\n    setOffboardPentominos() {\n        this.offBoardPentominos = this.pentominos.filter((pento) => {\n            return pento.onBoard === false;\n        });\n        this.pentominos = this.pentominos.filter((pento) => {\n            return pento.onBoard === true;\n        });\n        this.registerPieces();\n        return this.offBoardPentominos;\n    }\n\n    setPosition(pentomino, position) {\n        pentomino.position.x = position[0];\n        pentomino.position.y = position[1];\n    }\n\n    findFirstPartRight(pentomino) {\n        let offsetRight = pentomino.dimensions[0];\n        let part = pentomino.faces[pentomino.face][0];\n        for (let j = 0; j < pentomino.faces[pentomino.face].length; j++) {\n            part = pentomino.faces[pentomino.face][j];\n            offsetRight = ((part[1] === 0) && (part[0] < offsetRight)) ? part[0] : offsetRight;\n        }\n        return offsetRight;\n    }\n\n    movePentomino(pentomino, face, position, shiftLeft) {\n        let newPosition;\n        this.registerPiece(pentomino, -1);\n        this.setFace(pentomino, face);\n        // If left top of pentomino is empty ___|\n        // move pentomino to the left\n        if (shiftLeft && position[0] > 0) {\n            let xShift = this.findFirstPartRight(pentomino);\n            newPosition = [position[0] - xShift, position[1]];\n        } else {\n            newPosition = position;\n        }\n        this.setPosition(pentomino, newPosition);\n        this.registerPiece(pentomino, 1);\n        // console.table($scope.board.fields);\n    }\n\n    adjustPosition() {  // Thanks Ben Nierop, for the idea\n        let pentomino = this.activePentomino;\n        let partRelPosition = pentomino.faces[pentomino.face][pentomino.activePart];\n        let partAbsPosition = [\n            pentomino.position.x + partRelPosition[0],\n            pentomino.position.y + partRelPosition[1]\n        ];\n        let partToBottom = pentomino.dimensions[1] - partRelPosition[1] - 1;\n        let partToRight = pentomino.dimensions[0] - partRelPosition[0] - 1;\n        switch (pentomino.activePart) {\n            case 0:\n                pentomino.position.x = partAbsPosition[0] - partToBottom;\n                pentomino.position.y = partAbsPosition[1] - partRelPosition[0];\n                break;\n            case 1:\n                pentomino.position.x = partAbsPosition[0] - partToRight;\n                break;\n            case 2:\n                pentomino.position.y = partAbsPosition[1] - partToBottom;\n                break;\n        }\n    }\n\n    registerPiece(pentomino, onOff) {\n        if (pentomino) {\n            let onBoardParts = 0;\n            let partsCount = pentomino.faces[pentomino.face].length;\n            for (let i = 0; i < partsCount; i++) {\n                let x = pentomino.faces[pentomino.face][i][0] + pentomino.position.x;\n                let y = pentomino.faces[pentomino.face][i][1] + pentomino.position.y;\n                if (this.bs.onBoard(x, y)) {\n                    this.fields[y][x] += onOff;\n                    onBoardParts += 1;\n                }\n                pentomino.onBoard = (onBoardParts == partsCount);\n            }\n            this.bnds.signal('position-signal');\n        }\n    }\n\n    registerPieces() {\n        this.fields = this.setBoardFields(0);\n        for (var i = 0; i < this.pentominos.length; i++) {\n            let pentomino = this.pentominos[i];\n            this.registerPiece(pentomino, 1);\n            this.adjustDimensions(pentomino);\n        }\n        this.bnds.signal('position-signal');\n    }\n\n    setBoardFields(content) {\n        let w = this.bs.getWidth();\n        let h = this.bs.getHeight();\n        let fields = [];\n        for (let y = 0; y < h; y++) {\n            fields.push([]);\n            for (let x = 0; x < w; x++) {\n                fields[y].push(content);\n            }\n        }\n        return fields;\n    }\n\n    start() {\n        this.getPentominoData().then((response) => {\n            this.pentominos = response;\n            this.getPentominoColors().then(() => {\n                this.getStartPosition(this.bs.boardType).then(() => {\n                    this.registerPieces();\n                    this.solved = false;\n                });\n            });\n        });\n    }\n\n    getPentominoData() {\n        return this.ds.getPentominos().then((response) => {\n            return response;\n        });\n    }\n\n    getPentominoColors() {\n        // let self = this;\n        return this.ds.getColors().then((response) => {\n            for (let i = 0; i < this.pentominos.length; i++) {\n                this.pentominos[i].color = response[i].color;\n            }\n        });\n    }\n\n    setFace(pentomino, face) {\n        pentomino.face = face;\n        this.adjustDimensions(pentomino);\n    }\n\n    adjustDimensions(pentomino) {\n        if (pentomino && pentomino.initialDimensions) {\n            pentomino.dimensions = pentomino.initialDimensions.slice();\n        }\n        if (pentomino && pentomino.face % 2 == 1) {\n            pentomino.dimensions.reverse();\n        }\n    }\n\n    getStartPosition(shape) {\n        return this.ds.getStartPosition(shape).then((response) => {\n            this.bs.boardType = shape;\n            this.sls.currentSolution = -1;\n            this.sls.setShowSolutions();\n            let count = response.length;\n            for (let i = 0; i < count; i++) {\n                let pentomino = this.pentominos[i];\n                pentomino.face = response[i].face;\n                pentomino.position = response[i].position;\n                pentomino.active = false;\n                pentomino.index = i;\n                if (!pentomino.initialDimensions) {\n                    pentomino.initialDimensions = pentomino.dimensions.slice();\n                } else {\n                    pentomino.dimensions = pentomino.initialDimensions.slice();\n                }\n                if (pentomino.face % 2 == 1) {\n                    pentomino.dimensions.reverse();\n                }\n            }\n            while (this.pentominos.length < count) {\n                this.pentominos.pop();\n            }\n            this.registerPieces();\n        });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from './board-service';\n\n@inject(BoardService)\n\nexport class PermutationService {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.rotable = [\n            [ // rotate\n                [1, 2, 3, 0, 5, 6, 7, 4], // blyfn\n                [1, 2, 3, 0], // vw\n                [1, 2, 3, 0], // tu\n                [1, 0, 3, 2], // z\n                [1, 0], // i\n                [0] // xo not necessary\n            ],\n            [ // flip around yAxis\n                [4, 7, 6, 5, 0, 3, 2, 1], // blyfn\n                [3, 2, 1, 0], // vw\n                [0, 3, 2, 1], // tu\n                [2, 3, 0, 1], // z\n                [0, 1], // i not necessary\n                [0] // xo not necessary\n            ],\n            [ // flip around xAxis\n                [6, 5, 4, 7, 2, 1, 0, 3], // blyfn\n                [1, 0, 3, 2], // vw\n                [2, 1, 0, 3], // tu\n                [2, 3, 0, 1], // z\n                [0, 1], // i not necessary\n                [0] // xo not necessary\n            ]\n        ];\n    }\n\n    // Returns the new face index for a given face, action and blocktype\n    flipRotate(pentomino, part) {\n        if (part == undefined) { part = pentomino.activePart; }\n        pentomino.face = this.rotable[part][pentomino.type][pentomino.face];\n        // switch the dimensions if pentomino is rotated;\n        if (part === 0) {\n            pentomino.dimensions.reverse();\n        }\n    }\n\n    flipBoardYAxis(pentominos) {\n        let pentomino;\n        for (let i = 0; i < pentominos.length; i++) {\n            pentomino = pentominos[i];\n            this.flipRotate(pentomino, 1);\n            pentomino.position.x = this.bs.getWidth() - pentomino.position.x - pentomino.dimensions[0];\n        }\n    }\n\n    // 90° clockwise rotation\n    rotateSquareBoard(pentominos) {\n        let pentomino;\n        let origin = {};\n        for (let i = 0; i < pentominos.length; i++) {\n            pentomino = pentominos[i];\n            // bottom left of current rectangle occupied by pentomino\n            origin.x = pentomino.position.x;\n            origin.y = pentomino.position.y + pentomino.dimensions[1];\n            // rotated position on board\n            pentomino.position.x = this.bs.getWidth() - origin.y;\n            pentomino.position.y = origin.x;\n            // rotated pentomino\n            this.flipRotate(pentomino, 0);\n        }\n    }\n\n    shiftPieces(pentominos, dx, dy) {\n        for (let i = 0; i < pentominos.length; i++) {\n            pentominos[i].position.x += dx;\n            pentominos[i].position.y += dy;\n        }\n    }\n\n    rotateBoard(pentominos) {\n        if (this.bs.boardType == 'square') {\n            this.rotateSquareBoard(pentominos);\n        } else {\n            // rotate twice and shift pentominos 4 positions down\n            for (let i = 0; i < 2; i++) this.rotateSquareBoard(pentominos);\n            this.shiftPieces(pentominos, 0, 4);\n        }\n    }\n\n    mixBoard(pentominos) {\n        let clientWidth = Math.floor(document.querySelectorAll('.dragArea')[0].clientWidth / this.bs.partSize);\n        let clientHeight = Math.floor(document.querySelectorAll('.dragArea')[0].clientHeight / this.bs.partSize);\n        let maxX = clientWidth - 4;\n        let maxY = clientHeight - 4;\n        // offset values in positions\n        let offsetX = Math.floor((clientWidth - this.bs.getWidth()) / 2);\n\n        const count = pentominos.length;\n        for (let i = 0; i < count; i++) {\n            const pentomino = pentominos[i];\n            const face = Math.floor(Math.random() * pentomino.faces.length);\n            pentomino.face = face;\n            // find random off board position\n            do {\n                let xPos = Math.floor(Math.random() * maxX);\n                xPos -= offsetX;\n                let yPos = Math.floor(Math.random() * maxY);\n\n                pentomino.position.x = xPos;\n                pentomino.position.y = yPos;\n            } while (this.bs.touchesBoard(pentomino));\n            pentomino.onBoard = false;\n        }\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nexport class SettingService {\n\n    constructor() {\n        this.opaqueBlocks = true;\n        this.showSolutions = false;\n        this.scale = 1;\n        this.partSize = 40;\n        this.opaqueBlocks = false;\n    }\n\n    getScale() {\n        let screenWidth = document.querySelectorAll(\"html\")[0].clientWidth;\n        let boardWidth = document.querySelectorAll(\".board\")[0].clientWidth;\n        let scale = Math.min(screenWidth / boardWidth, 1);\n        scale = Math.floor(scale * 10) / 10;\n        this.scale = scale;\n        return {\n            'transformOrigin': 'top',\n            '-webkit-transform': 'scale(' + scale + ', ' + scale + ')',\n            '-ms-transform': 'scale(' + scale + ', ' + scale + ')',\n            'transform': 'scale(' + scale + ', ' + scale + ')'\n        };\n    };\n\n    setShowSolutions() {\n        this.showSolutions = true;\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from './board-service';\nimport { PermutationService } from './permutation-service';\nimport { DataService } from './data-service';\nimport { SettingService } from '../services/setting-service';\n\n@inject(BoardService, PermutationService, DataService, SettingService)\n\nexport class SolutionService {\n\n    constructor(boardService, permutationService, dataService, settingService) {\n        this.bs = boardService;\n        this.ds = dataService;\n        this.ss = settingService;\n        this.prms = permutationService;\n        this.boardType = this.bs.boardType;\n        this.currentSolution = -1;\n        this.getSolutions();\n    }\n\n    getSolutions() {\n        this.solutions = this.ds.getSolutions();\n        this.setShowSolutions();\n    }\n\n    setShowSolutions() {\n        this.currentSolution = -1;\n        if (this.solutions[this.bs.boardType].length > 0) {\n            this.ss.setShowSolutions();\n        }\n    }\n\n    saveSolution(pentominos) {\n        let solutionResult = this.isNewSolution(pentominos);\n        // A number indicates an existing solution\n        // A string indicate a new solution\n        if (!isNaN(solutionResult)) {\n            // show this solution\n            this.currentSolution = solutionResult;\n            this.bs.unsetNewSolution();\n        } else {\n            this.ds.saveSolution(solutionResult);\n            this.solutions[this.boardType].push(solutionResult);\n            this.currentSolution = this.solutions[this.boardType].length - 1;\n            this.bs.setNewSolution();\n        }\n    }\n\n    isNewSolution(pentominos) {\n        let isNewSolution = true;\n        let rotations = (this.boardType == 'square') ? 4 : 2;\n        let solutionString = this.solution2String(pentominos);\n        let foundSolStr = solutionString;\n        let solutionsCount = this.solutions[this.boardType].length;\n\n        // Mirror\n        for (let flip = 0; flip < 2; flip++) {\n            // Rotate\n            for (let rotation = 0; rotation < rotations; rotation++) {\n                // Existing solutions\n                for (let i = 0; i < solutionsCount; i++) {\n                    solutionString = this.solution2String(pentominos);\n                    isNewSolution = isNewSolution && (this.solutions[this.bs.boardType][i] !== solutionString);\n                    if (!isNewSolution) return i;\n                }\n                // Return to original position the last time\n                this.prms.rotateBoard(pentominos);\n            }\n            this.prms.flipBoardYAxis(pentominos);\n        }\n        return foundSolStr;\n    }\n\n    solution2String(pentominos) {\n        let solutionString = \"\";\n        let count = pentominos.length;\n        for (let i = 0; i < count; i++) {\n            let pentomino = pentominos[i];\n            solutionString += this.pentomino2string(pentomino);\n        }\n        return solutionString;\n    }\n\n    pentomino2string(pentomino) {\n        let parts = [];\n        if (pentomino) {\n            parts.push('#' + pentomino.name);\n            parts.push(pentomino.face);\n            parts.push(pentomino.position.x);\n            parts.push(pentomino.position.y);\n            return parts.join('_');\n        }\n    }\n\n}","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { DataService } from './data-service';\nimport { BoardService } from './board-service';\nimport { PentominoService } from './pentomino-service';\nimport { SolutionService } from './solution-service';\nimport { PermutationService } from './permutation-service';\n\n\n@inject(BindingSignaler, DataService, BoardService, PentominoService, SolutionService, PermutationService)\nexport class SolverService {\n\n    constructor(bindingSignaler, dataService, boardService, pentominoService, solutionService, permutationService) {\n        this.bnds = bindingSignaler;\n        this.ds = dataService;\n        this.bs = boardService;\n        this.ps = pentominoService;\n        this.sls = solutionService;\n        this.prms = permutationService;\n        this.continue = false;\n\n        this.pentominosOnBoard = 0;\n        this.positionsTried = 0;\n        this.startPositionsXblock = {\n            'square': [\n                [1, 0],\n                [1, 1],\n                [2, 0],\n                [2, 1],\n                [2, 2]\n            ],\n            'rectangle': [\n                [1, 0],\n                [0, 1],\n                [1, 1],\n                [0, 2],\n                [1, 2],\n                [0, 3],\n                [1, 3]\n            ],\n            'dozen': [\n            ],\n            'beam': [\n            ],\n            'stick': [\n            ],\n            'twig': [\n                [1, 0],\n                [6, 0]\n            ],\n        };\n        this.startPosXBlock = 0;\n        this.xPentomino = this.ps.getPentomino('x');\n        this.slvrWrkr = new Worker('./src/services/solver-worker.js');\n    }\n\n\n    getXBlockPosition() {\n        if (this.startPosXBlock < this.startPositionsXblock[this.bs.boardType].length) {\n            let position = this.startPositionsXblock[this.bs.boardType][this.startPosXBlock].slice();\n            this.startPosXBlock += 1;\n            return position;\n        } else {\n            return false;\n        }\n    }\n\n    discard(misFits) {\n        let pentomino = this.ps.pentominos.pop();\n        pentomino.onBoard = false;\n        misFits.push(pentomino);\n        this.ps.registerPiece(pentomino, -1);\n    }\n\n    signalViewUpdate() {\n        this.bnds.signal('position-signal');\n    }\n\n    findNextFit(offBoards) {\n        let misFits = [];\n        const firstEmptyPosition = this.findFirstEmptyPosition();\n        if (firstEmptyPosition) { // start trying other pentominos\n            if (this.holeFitsXPieces(firstEmptyPosition)/* && this.positionsTried < 10000 */) {\n                while (offBoards.length) {\n                    const pentomino = this.ps.nextOnboard(offBoards);\n                    if (pentomino) {\n                        console.clear();\n                        console.log('trying ', this.positionsTried, pentomino.name);\n                        const count = pentomino.faces.length;\n                        for (let face = 0; face < count; face++) {\n                            this.positionsTried++;\n                            this.ps.movePentomino(pentomino, face, firstEmptyPosition, true);\n                            // make aurelia update the dom somehow\n                            this.logBoard();\n                            if (this.isFitting()) {\n                                this.findNextFit(this.ps.sortPentominos(misFits.concat(offBoards)));\n                            }\n                        }\n                        this.discard(misFits);\n                        this.logBoard();\n                    } // else next pentomino\n                }\n            }\n            this.logBoard();\n        } else {\n            this.sls.saveSolution(this.ps.pentominos);\n        }\n        return misFits;\n    }\n\n    autoSolve(offBoards) {\n        if (this.ps.allOffBoard()) {\n            // put the x on board\n            this.ps.setOnboard(this.xPentomino, false);\n            let xPosition = this.getXBlockPosition();\n            while (xPosition) {  //for all x positions\n                this.ps.movePentomino(this.xPentomino, 0, xPosition, false);\n                offBoards = this.findNextFit(offBoards);\n                xPosition = this.getXBlockPosition();\n            }\n            console.log('all xBlockPositions tried');\n        } else {\n            offBoards = this.findNextFit(offBoards);\n        }\n        return offBoards;\n    }\n\n    startSolving() {\n        this.boardWidth = this.bs.getWidth();\n        this.boardHeight = this.bs.getHeight();\n        this.startPosXBlock = 0;\n        this.positionsTried = 0;\n        let workerData = {\n            offBoards: this.ps.setOffboardPentominos(),\n            onBoards: this.ps.pentominos\n        };\n\n        this.slvrWrkr.postMessage(workerData);\n\n        this.slvrWrkr.onmessage = (e) => {\n            let pentominos = e.data;\n            console.log('Message received from worker: ', pentominos);\n            this.ps.setAllOnboard(e.data.onBoards, e.data.offBoards);\n        };\n\n        // offBoardPentominos = this.autoSolve(offBoardPentominos);\n\n        // if (offBoardPentominos.length > 0) {\n        //     console.log('No solutions found!');\n        // }\n    }\n\n    logBoard() {\n        let fields = this.ps.setBoardFields('');\n        const blockCount = this.ps.pentominos.length;\n        for (let i = 0; i < blockCount; i++) {\n            const pentomino = this.ps.pentominos[i];\n            const face = pentomino.faces[pentomino.face];\n            const partCount = face.length;\n            for (let j = 0; j < partCount; j++) {\n                const x = face[j][0] + pentomino.position.x;\n                const y = face[j][1] + pentomino.position.y;\n                if (y < this.boardHeight && x < this.boardWidth) {\n                    fields[y][x] += pentomino.name;\n                }\n            }\n        }\n        console.clear();\n        console.table(fields);\n    }\n\n    findFirstEmptyPosition() {\n        for (let y = 0; y < this.boardHeight; y++) {\n            for (let x = 0; x < this.boardWidth; x++) {\n                if (this.ps.fields[y][x] === 0) return [x, y];\n            }\n        }\n        return false;\n    }\n\n    copyBoardFields() {\n        let fields = [];\n        for (let y = 0; y < this.boardHeight; y++) {\n            fields.push([]);\n            for (let x = 0; x < this.boardWidth; x++) {\n                fields[y].push(this.ps.fields[y][x]);\n            }\n        }\n        return fields;\n    }\n\n    // find out if open region at x,y is large enough for a pentomino by recursion counting\n    // xy has to be the most up left open spot\n    holeFitsXPieces(xy) {\n        var self = this;\n        var holeSize = 0;\n        var oPentoOnboard = this.ps.oPentominoOnboard();\n        // var minHoleSize = (oPentoOnboard || this.boardType === 'rectangle') ? 5 : 4;\n        var label = 'a';\n        var board = this.copyBoardFields();\n        // let x = xy[0];\n        var y = xy[1];\n\n        var countDown = (xy) => {\n            let y = xy[1];\n            const x = xy[0];\n            while ((y < self.boardHeight) && (board[y][x] === 0)) {\n                board[y][x] = label;\n                holeSize++;\n                // console.table(board);\n                countLeft([x - 1, y]);\n                countRight([x + 1, y]);\n                y++;\n            }\n        };\n\n        var countUp = (xy) => {\n            let y = xy[1];\n            const x = xy[0];\n            while ((y >= 0) && (board[y][x] === 0)) {\n                board[y][x] = label;\n                holeSize++;\n                // console.table(board);\n                countRight([x + 1, y]);\n                countLeft([x - 1, y]);\n                y--;\n            }\n        };\n\n        var countRight = (xy) => {\n            let x = xy[0];\n            const y = xy[1];\n            while ((x < self.boardWidth) && (board[y][x] === 0)) {\n                board[y][x] = label;\n                holeSize++;\n                // console.table(board);\n                countDown([x, y + 1]);\n                countUp([x, y - 1]);\n                x++;\n            }\n        };\n\n        var countLeft = (xy) => {\n            let x = xy[0];\n            const y = xy[1];\n            while ((x >= 0) && (board[y][x] === 0)) {\n                board[y][x] = label;\n                holeSize++;\n                // console.table(board);\n                countDown([x, y + 1]);\n                countUp([x, y - 1]);\n                x--;\n            }\n        };\n\n        countRight(xy);\n        return this.holeFits(holeSize);\n    }\n\n    holeFits(sum) {\n        let compensation = (this.ps.oPentominoOnboard() || this.boardType === 'rectangle') ? 0 : 4;\n        return ((sum - compensation) % 5 === 0);\n    }\n\n    noneStickingOut(sum) {\n        let compensation = (this.ps.oPentominoOnboard() || this.boardType === 'rectangle') ? 4 : 0;\n        return ((sum - compensation) % 5 === 0);\n    }\n\n    // Return true if no overlapping pieces and all pieces are completely on the board\n    isFitting() {\n        let sum = 0;\n        for (let y = 0; y < this.ps.fields.length; y++) {\n            for (let x = 0; x < this.ps.fields[y].length; x++) {\n                if (this.ps.fields[y][x] > 1) {\n                    return false;\n                } else {\n                    sum += this.ps.fields[y][x];\n                }\n            }\n        }\n        return this.noneStickingOut(sum);\n    }\n\n}\n","autoSolve = function (offBoards, onBoards) {\n    let pentomino = offBoards[0];\n    pentomino.position.x -= 3;\n    pentomino.face = 1;\n    let workerData = {\n        offBoards: offBoards,\n        onBoards: onBoards\n    };\n    postMessage(workerData);\n};\n\nonmessage = function (e) {\n    console.log('Starting solver worker');\n    let offBoards = e.data.offBoards;\n    let onBoards = e.data.onBoards;\n    autoSolve(offBoards, onBoards);\n    console.log('Solver worker finished');\n};\n","export class PartPosValueConverter {\n    toView(css, config) {\n        css = {\n            left: config.x * config.partSize + 'px',\n            top: config.y * config.partSize + 'px'\n        };\n        return css;\n    }\n}","export class PentoFaceValueConverter {\n    toView(array, config) {\n        array = config.faces[config.face];\n        return array;\n    }\n}","export class PentoPosValueConverter {\n    toView(css, config) {\n        css = {\n            left: config.x * config.partSize + 'px',\n            top: config.y * config.partSize + 'px',\n            backgroundColor: config.color\n        };\n        return css;\n    }\n}"],"sourceRoot":"../src"}