{"version":3,"sources":["app.js","environment.js","main.js","components/board.js","components/controls.js","components/header.js","components/menu.js","components/pentominos.js","components/solving.js","resources/index.js","services/board-service.js","services/data-service.js","services/drag-service.js","services/keystroke-service.js","services/pentomino-service.js","services/permutation-service.js","services/setting-service.js","services/solution-service.js","services/solver-worker.js","resources/value-converters/part-pos-value-converter.js","resources/value-converters/pento-face-value-converter.js","resources/value-converters/pento-pos-value-converter.js","resources/value-converters/thousands-value-converter.js","data/colors.js","data/pentominos.js","data/start-beam.js","data/start-dozen.js","data/start-rectangle.js","data/start-square.js","data/start-stick.js","data/start-twig.js"],"names":["App","dragService","keystrokeService","ds","ks","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","boardService","bs","getBoardSizeCSS","shape","boardType","boardTypes","css","width","w","partSize","height","h","getBoardClasses","newSolution","classes","solvedClass","push","join","ControlsCustomElement","bindingSignaler","eventAggregator","settingService","pentominoService","solutionService","ea","bnds","ss","ps","sls","disabledButtons","setSubscribers","getIndicatorClass","solved","showSolution","pentominos","solutionString","solutions","currentSolution","splitString","substr","split","i","length","pentomino","props","face","parseInt","position","x","y","signal","registerPieces","unsetNewSolution","disableNextButton","current","count","disablePreviousButton","showFirstSolution","showLastSolution","solutionCount","showPreviousSolution","showNextSolution","direction","newDirection","directions","subscribe","response","setTimeout","setPossibleSolutions","onBoards","publish","possibleSolutionsCount","getPossibleSolutionsCount","possible","text","HeaderCustomElement","title","moves","result","getHeaderSizeCss","resetMoves","MenuCustomElement","permutationService","prms","Object","keys","settings","menuVisible","menuDisabled","submenuBoardsVisible","rotateBoard","flipBoardYAxis","showTheMenu","mixBoard","hideTheMenu","showThisBoard","key","threshold","toggleSubmenuBoards","getBoardDimensions","getActiveBoardClass","screenIsLargeEnough","clw","document","querySelectorAll","clientWidth","clh","clientHeight","setStartPosition","setBoardType","getStartPosition","unsetSolved","workersSupported","window","Worker","showSolvingPanel","PentominosCustomElement","getPentominoClasses","name","active","getPartClasses","partIndex","flipH","index","dimensions","flipV","type","getPentominoCSS","color","left","top","backgroundColor","getPartCSS","part","attached","SolvingCustomElement","solvingPanelVisible","slvrWrkr","canStop","positionsTried","stop","solutionsBuffer","backupPentominos","slice","alert","autoSolve","boardWidth","getWidth","boardHeight","getHeight","startPosXBlock","workerData","message","fields","getFields","offBoards","postMessage","handleSolutions","onmessage","e","sortPentominos","data","positions","setPentominos","bufferSolution","solution","close","delete","stageBuffer","deleteSolutions","self","solutionsInQueue","shift","setSolved","saveSolution","requestAnimationFrame","terminate","BoardService","surface","setNewSolution","boardsCount","k","hasOwnProperty","onBoard","touchesBoard","isTouching","faces","partIsOnBoard","DataService","client","getSolutions","timeOutHandle","undefined","getPentominos","fileName","get","JSON","parse","getColors","localStorage","getItem","sortSolutions","Array","isArray","sort","a","b","saveToLocalStorage","setItem","stringify","clearTimeout","DragService","dragStartPos","dragEndPos","lastZindex","getClientPos","event","clientX","touches","clientY","scale","startDrag","container","clientPos","setActivePentomino","registerPiece","target","offsetParent","style","zIndex","startX","offsetLeft","startY","offsetTop","doDrag","getActivePentomino","stopDrag","alignToGrid","isDragged","adjustPosition","flipRotate","isSolved","releasePentomino","resetActivePentomino","newX","Math","round","newY","setActivePentominoPosition","abs","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","keysOff","keysOn","addEventListener","keycode","PentominoService","dataService","offBoardPentominos","activePentomino","oBlock","boardIsFull","activePart","signalViewUpdate","pentos","partRelPosition","partAbsPosition","partToBottom","partToRight","onOff","onBoardParts","partsCount","setBoardFields","adjustDimensions","content","getPentominoData","getPentominoColors","initialDimensions","reverse","boardHas60Squares","toggleOblock","pop","filter","pento","PermutationService","rotable","partTranslations","rotateSquareBoard","origin","shiftPieces","dx","dy","shiftPiecesToTop","topMostY","min","map","floor","maxX","maxY","offsetX","random","xPos","yPos","SettingService","opaqueBlocks","getScale","screenWidth","SolutionService","possibleSolutions","onBoardPentominos","rotations","flipRotatedOnboardStrings","flip","rotation","onBoardStrings","pentomino2string","containsAll","results","onBoardStringsArr","forEach","includes","str","some","solutionResult","isNewSolution","isNaN","findSolution","indexOf","foundSolStr","solution2String","solNr","parts","rotatedBoard","startPositionsXblock","xPentomino","getPentomino","proceed","allOffBoard","setOnboard","xPosition","getXBlockPosition","movePentomino","sendFeedBack","findNextFit","emptyBoard","copyBoardFields","flds","discard","misFits","findFirstEmptyPosition","firstAxis","max","secondAxis","j","findFirstPartRight","offsetRight","findFirstPartDown","offsetDown","firstEmptyPosition","holeFitsXPieces","nextOnboard","isFitting","concat","findPentominoByName","set","find","xy","holeSize","oPentoOnboard","oPentominoOnboard","label","board","countDown","countLeft","countRight","countUp","holeFits","sum","compensation","initVariables","noneStickingOut","logBoard","blockCount","partCount","console","clear","table","shiftIt","newPosition","setFace","yShift","xShift","setPosition","splice","PartPosValueConverter","toView","PentoFaceValueConverter","array","PentoPosValueConverter","ThousandsValueConverter","number","toLocaleString","colors","squareStart"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { DragService } from './services/drag-service';\nimport { KeystrokeService } from './services/keystroke-service';\n\n@inject(DragService, KeystrokeService)\n\nexport class App {\n    constructor(dragService, keystrokeService) {\n        this.ds = dragService;\n        this.ks = keystrokeService;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from '../services/board-service';\n\n@inject(BoardService)\n\nexport class BoardCustomElement {\n\n    constructor(boardService) {\n        this.bs = boardService;\n    }\n\n    getBoardSizeCSS(shape) {\n        let boardType = this.bs.boardTypes[shape];\n        let css = {\n            width: boardType.w * this.bs.partSize + 'px',\n            height: boardType.h * this.bs.partSize + 'px'\n        };\n        return css;\n    }\n\n    getBoardClasses(newSolution) {\n        let classes = ['board'];\n        let solvedClass = (newSolution) ? 'solved' : '';\n        classes.push(solvedClass);\n        return classes.join(' ');\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { SettingService } from '../services/setting-service';\nimport { PentominoService } from '../services/pentomino-service';\nimport { SolutionService } from '../services/solution-service';\n\n@inject(BindingSignaler, BoardService, EventAggregator, SettingService, PentominoService, SolutionService)\n\nexport class ControlsCustomElement {\n\n    constructor(bindingSignaler, boardService, eventAggregator, settingService, pentominoService, solutionService) {\n        this.ea = eventAggregator;\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.ss = settingService;\n        this.ps = pentominoService;\n        this.sls = solutionService;\n        this.disabledButtons = false;\n        this.setSubscribers();\n    }\n\n    get solutionCount() {\n        return this.sls.solutions[this.bs.boardType].length;\n    }\n\n    getIndicatorClass() {\n        let classes = ['indicator', 'rounded'];\n        let solvedClass = (this.bs.solved && !this.bs.newSolution) ? 'solved' : '';\n        classes.push(solvedClass);\n        return classes.join(' ');\n    }\n\n    get indicatorText() {\n        let currentSolution = this.sls.currentSolution;\n        let solutionCount = '(' + this.sls.solutions[this.bs.boardType].length + ') ';\n        let possibleSolutionsCount = this.sls.getPossibleSolutionsCount();\n        let possible = (possibleSolutionsCount > 0) ? possibleSolutionsCount + ' ' : '0 ';\n        // console.log('possible solutions: ', possibleSolutionsCount);\n        let current = (currentSolution >= 0) ? 'Solution&nbsp;&nbsp;' + (currentSolution + 1) + ' / ' : 'Solutions: ';\n        let text = current + possible + solutionCount;\n        return text;\n    }\n\n    showSolution() {\n        let pentominos = this.ps.pentominos;\n        let solutionString = this.sls.solutions[this.bs.boardType][this.sls.currentSolution];\n        let splitString = solutionString.substr(1).split('#');\n        for (let i = 0; i < splitString.length; i++) {\n            let pentomino = this.ps.pentominos[i];\n            let props = splitString[i].split('_');\n            pentomino.face = parseInt(props[1], 10);\n            pentomino.position.x = parseInt(props[2], 10);\n            pentomino.position.y = parseInt(props[3], 10);\n        }\n        this.bnds.signal('position-signal');\n        this.ps.registerPieces();\n        this.bs.unsetNewSolution();\n    }\n\n    disableNextButton(current, count) {\n        return (current + 1 == count) || this.disabledButtons;\n    }\n\n    disablePreviousButton(current) {\n        return (current == 0) || this.disabledButtons;\n    }\n\n    showFirstSolution() {\n        this.sls.currentSolution = 0;\n        this.showSolution();\n    }\n\n    showLastSolution() {\n        this.sls.currentSolution = this.solutionCount - 1;\n        this.showSolution();\n    }\n\n    showPreviousSolution() {\n        if (this.sls.currentSolution > 0) {\n            this.sls.currentSolution--;\n            this.showSolution();\n        }\n    }\n\n    showNextSolution() {\n        if (!this.disableNextButton(this.sls.currentSolution, this.sls.solutions[this.bs.boardType].length)) {\n            this.sls.currentSolution++;\n            this.showSolution();\n        }\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        let newDirection = 0;\n        let directions = {\n            'ArrowRight': 0,\n            'ArrowDown': 1,\n            'ArrowLeft': 2,\n            'ArrowUp': 3\n        };\n        this.ea.subscribe('solving', response => {\n            this.disabledButtons = response;\n        });\n        this.ea.subscribe('move', response => {\n            if (response == 1) {\n                setTimeout(() => { this.sls.setPossibleSolutions(this.ps.onBoards); });\n            }\n        });\n        this.ea.subscribe('keyPressed', response => {\n            if (!this.disabledButtons) {\n                switch (response) {\n                    case 'ArrowRight': this.showNextSolution();\n                        break;\n                    case 'ArrowLeft': this.showPreviousSolution();\n                        break;\n                    case 'ArrowDown': this.showFirstSolution();\n                        break;\n                    case 'ArrowUp': this.showLastSolution();\n                        break;\n                    case ' ': this.ea.publish('pause');\n                        break;\n                }\n\n\n            }\n        });\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from '../services/board-service';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\n@inject(BoardService, EventAggregator)\nexport class HeaderCustomElement {\n\n    constructor(boardService, eventAggregator) {\n        this.bs = boardService;\n        this.ea = eventAggregator;\n        this.title = 'Pentomino';\n        this.moves = 0;\n        this.ea.subscribe('move', (result) => {\n            (result > 0) ? this.moves++ : this.moves = 0;\n        });\n    }\n\n    getHeaderSizeCss(shape) {\n        let boardType = this.bs.boardTypes[shape];\n        let css = {\n            width: boardType.w * this.bs.partSize + 'px',\n        }\n        return css;\n    }\n\n    resetMoves() {\n        this.ea.publish('move', 0);\n    }\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { SolutionService } from '../services/solution-service';\nimport { PentominoService } from '../services/pentomino-service';\nimport { PermutationService } from '../services/permutation-service';\nimport { SettingService } from '../services/setting-service';\n\n@inject(BindingSignaler, BoardService, EventAggregator, SolutionService, PentominoService, PermutationService, SettingService)\n\nexport class MenuCustomElement {\n\n    constructor(bindingSignaler, boardService, eventAggregator, solutionService, pentominoService, permutationService, settingService) {\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.ea = eventAggregator;\n        this.sls = solutionService;\n        this.ps = pentominoService;\n        this.prms = permutationService;\n        this.ss = settingService;\n        this.boardTypes = Object.keys(this.bs.boardTypes);\n        this.settings = {\n            menuVisible: false,\n            menuDisabled: false,\n            submenuBoardsVisible: false,\n        };\n        this.ea.subscribe('solving', response => {\n            this.settings.menuDisabled = response;\n        });\n    }\n\n    get disableBoardSwitch() {\n        return (this.sls.solutions['square'].length < 2);\n    }\n\n    get menuDisabled() {\n        return this.settings.menuDisabled;\n    }\n\n    get solverDisabled() {\n        return (this.sls.solutions['square'].length < 2) || !this.workersSupported();\n    }\n\n    rotateBoard() {\n        this.prms.rotateBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    flipBoardYAxis() {\n        this.prms.flipBoardYAxis(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n    }\n\n    showTheMenu() {\n        this.settings.menuVisible = true;\n        this.settings.submenuBoardsVisible = false;\n    }\n\n    mixBoard() {\n        this.prms.mixBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.settings.menuVisible = false;\n        this.bnds.signal('position-signal');\n        this.ea.publish('move', 0);\n    }\n\n    hideTheMenu() {\n        this.settings.menuVisible = false;\n    }\n\n    showThisBoard(key) {\n        let threshold = 3;\n        if (this.sls.solutions) {\n            switch (key) {\n                case 'square':\n                    return true;\n                case 'rectangle':\n                    return this.sls.solutions['square'].length > threshold;\n                case 'beam':\n                    return this.sls.solutions['rectangle'].length > threshold;\n                case 'stick':\n                    return this.sls.solutions['beam'].length > threshold;\n                case 'twig':\n                    return this.sls.solutions['stick'].length > threshold;\n                default:\n                    return false;\n            }\n        }\n        return true;\n    }\n\n    toggleSubmenuBoards() {\n        this.settings.submenuBoardsVisible = !this.settings.submenuBoardsVisible;\n        return false;\n    }\n\n    getBoardDimensions(boardType) {\n        let text = ('' + this.bs.boardTypes[boardType].w + '&nbsp;&times;&nbsp;' + this.bs.boardTypes[boardType].h);\n        return text;\n    }\n\n    getActiveBoardClass(boardType) {\n        return (this.bs.boardType == boardType) ? 'active' : '';\n    }\n\n    screenIsLargeEnough() {\n        let clw = document.querySelectorAll('html')[0].clientWidth;\n        let clh = document.querySelectorAll('html')[0].clientHeight;\n        return clw + clh > 1100;\n    }\n\n    setStartPosition(shape) {\n        this.ea.publish('showSolvingPanel', false);\n        this.ea.publish('move', 0);\n        this.bs.setBoardType(shape);\n        this.ps.getStartPosition();\n        this.ps.registerPieces();\n        this.bs.unsetSolved();\n        this.bs.unsetNewSolution();\n        this.settings.submenuBoardsVisible = false;\n        this.settings.menuVisible = false;\n    }\n\n    workersSupported() {\n        if (window.Worker) {\n            return true;\n        }\n        return false;\n    }\n\n    showSolvingPanel() {\n        this.ea.publish('showSolvingPanel', true);\n        this.settings.menuVisible = false;\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { PentominoService } from '../services/pentomino-service';\nimport { SettingService } from '../services/setting-service';\nimport { DragService } from '../services/drag-service';\n\n@inject(PentominoService, SettingService, DragService)\nexport class PentominosCustomElement {\n\n    constructor(pentominoService, settingService, dragService) {\n        this.ps = pentominoService;\n        this.ss = settingService;\n        this.ds = dragService;\n    }\n\n    getPentominoClasses(pentomino) {\n        let classes = ['pentomino'];\n        classes.push('pentomino block_' + pentomino.name);\n        if (pentomino.active) {\n            classes.push('active');\n        }\n        return classes.join(' ');\n    }\n\n    getPartClasses(pentomino, partIndex, face) {\n        let classes = ['fa', 'part'];\n        // C and T blocks don't need mirrorring around symmetric direction\n        let flipH = !(pentomino.index === 1 &&\n            pentomino.dimensions[0] > pentomino.dimensions[1] ||\n            pentomino.index === 6 &&\n            pentomino.face % 2 === 0);\n        let flipV = !(pentomino.index === 1 &&\n            pentomino.dimensions[0] < pentomino.dimensions[1] ||\n            pentomino.index === 6 &&\n            pentomino.face % 2 === 1);\n        if (partIndex === 0 && pentomino.type < 5) {\n            classes.push('fa-refresh');\n            classes.push('rotate');\n        }\n        if (partIndex === 1 && pentomino.type < 4 && flipH) {\n            classes.push('fa-arrows-h');\n            classes.push('flipH');\n        }\n        if (partIndex === 2 && pentomino.type < 4 && flipV) {\n            classes.push('fa-arrows-v');\n            classes.push('flipV');\n        }\n        return classes.join(' ');\n    }\n\n    getPentominoCSS(x, y, color) {\n        let css = {\n            left: x * this.ss.partSize + 'px',\n            top: y * this.ss.partSize + 'px',\n            backgroundColor: color\n        };\n        return css;\n    }\n\n    getPartCSS(part) {\n        let css = {\n            'left': part[0] * this.ss.partSize + 'px',\n            'top': part[1] * this.ss.partSize + 'px'\n        };\n        return css;\n    }\n\n    attached() {\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { BoardService } from '../services/board-service';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { PentominoService } from '../services/pentomino-service';\nimport { PermutationService } from '../services/permutation-service';\nimport { SolutionService } from '../services/solution-service';\n\n@inject(BindingSignaler, BoardService, EventAggregator, PentominoService, PermutationService, SolutionService)\nexport class SolvingCustomElement {\n\n    constructor(bindingSignaler, boardService, eventAggregator, pentominoService, permutationService, solutionService) {\n        this.ea = eventAggregator;\n        this.bnds = bindingSignaler;\n        this.bs = boardService;\n        this.ps = pentominoService;\n        this.sls = solutionService;\n        this.prms = permutationService;\n        this.solvingPanelVisible = false;\n        this.slvrWrkr = null;\n        this.canStop = false;\n        this.positionsTried = 0;\n        this.ea.subscribe('showSolvingPanel', response => {\n            this.solvingPanelVisible = response;\n            if (!response) {\n                this.stop();\n            }\n        });\n        this.solutionsBuffer = [];\n        this.backupPentominos = this.ps.pentominos.slice();\n        this.alert = '';\n    }\n\n    get solutionsInQueue() {\n        return this.solutionsBuffer.length;\n    }\n\n    get noSolutions() {\n        return this.sls.solutions[this.bs.boardType].length === 0;\n    }\n\n    get noSpaceForSolving() {\n\n    }\n\n    get message() {\n        if (this.alert.length) {\n            return this.alert;\n        } else {\n            return false;\n        }\n    }\n\n    autoSolve() {\n        this.backupPentominos = this.ps.pentominos.slice();\n        this.slvrWrkr = new Worker('./src/services/solver-worker.js');\n        this.canStop = true;\n        this.boardWidth = this.bs.getWidth();\n        this.boardHeight = this.bs.getHeight();\n        this.startPosXBlock = 0;\n        this.positionsTried = 0;\n        this.solutionsBuffer = [];\n        let workerData = {\n            message: 'solve',\n            boardType: this.bs.boardType,\n            boardWidth: this.bs.getWidth(),\n            boardHeight: this.bs.getHeight(),\n            fields: this.ps.getFields(),\n            onBoards: this.ps.onBoards,\n            offBoards: this.ps.offBoards\n        };\n\n        this.ea.publish('solving', true);\n        this.slvrWrkr.postMessage(workerData);\n        this.handleSolutions();\n\n        this.slvrWrkr.onmessage = (e) => {\n            let pentominos = this.ps.sortPentominos(e.data.onBoards);\n            let offBoards = e.data.offBoards;\n            let message = e.data.message;\n            this.positionsTried = e.data.positions;\n            switch (message) {\n                case 'draw':\n                    this.ps.setPentominos(pentominos);\n                    this.alert = '';\n                    break;\n                case 'solution':\n                    this.alert = '';\n                    setTimeout(() => { this.bufferSolution(pentominos) });\n                    break;\n                case 'finish':\n                    this.alert = 'No more solutions found!';\n                    this.canStop = false;\n                    this.ea.publish('solving', false);\n                    break;\n                case 'noSolution':\n                    this.alert = 'No solutions found';\n                default:\n                    break;\n            }\n        };\n    }\n\n    bufferSolution(solution) {\n        this.solutionsBuffer.push(solution);\n    }\n\n    close() {\n        this.ea.publish('showSolvingPanel', false);\n    }\n\n    delete() {\n        this.stageBuffer = [];\n        this.sls.deleteSolutions();\n        this.ps.setPentominos(this.backupPentominos);\n        this.ps.registerPieces();\n    }\n\n    handleSolutions() {\n        let self = this;\n        // Are there any solutions to \n        if (this.solutionsInQueue) {\n            let pentominos = self.solutionsBuffer.shift();\n            self.ps.setPentominos(pentominos);\n            self.bs.setSolved();\n            self.sls.saveSolution(pentominos);\n        }\n        if (self.canStop || self.solutionsBuffer.length) {\n            requestAnimationFrame(() => { self.handleSolutions() });\n        } else {\n            self.sls.saveSolution();\n        }\n    }\n\n    mixBoard() {\n        this.prms.mixBoard(this.ps.pentominos);\n        this.ps.registerPieces();\n        this.bnds.signal('position-signal');\n    }\n\n    stop() {\n        this.canStop = false;\n        this.ea.publish('solving', false);\n        if (this.slvrWrkr) {\n            this.slvrWrkr.terminate();\n            this.ps.setPentominos(this.backupPentominos);\n            this.ps.registerPieces();\n        }\n    }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nexport class BoardService {\n\n    constructor() {\n        this.partSize = 40;\n        this.boardType = 'square';\n        this.boardTypes = {\n            'square': {\n                w: 8,\n                h: 8,\n                surface: 64\n            },\n            'rectangle': {\n                w: 6,\n                h: 10,\n                surface: 60\n            },\n            'dozen': {\n                w: 12,\n                h: 5,\n                surface: 60\n            },\n            'beam': {\n                w: 15,\n                h: 4,\n                surface: 60\n            },\n            'stick': {\n                w: 16,\n                h: 4,\n                surface: 64\n            },\n            'twig': {\n                w: 20,\n                h: 3,\n                surface: 60\n            }\n        };\n        this.solved = false;\n        this.newSolution = false;\n    }\n\n    setSolved() {\n        this.solved = true;\n    }\n\n    unsetSolved() {\n        this.solved = false;\n    }\n\n    setNewSolution() {\n        this.newSolution = true;\n    }\n\n    unsetNewSolution() {\n        this.newSolution = false;\n    }\n\n    setBoardType(shape) {\n        this.boardType = shape;\n    }\n\n    getWidth() {\n        return this.boardTypes[this.boardType].w;\n    }\n\n    getHeight() {\n        return this.boardTypes[this.boardType].h;\n    }\n\n    boardsCount() {\n        let count = 0;\n        for (let k in this.boardTypes) if (this.boardTypes.hasOwnProperty(k)) count++;\n        return count;\n    }\n\n    onBoard(x, y) {\n        return (x >= 0) && (x < this.getWidth()) && (y >= 0) && (y < this.getHeight());\n    }\n\n    touchesBoard(pentomino) {\n        let isTouching = false;\n        const count = pentomino.faces[pentomino.face].length;\n        for (let i = 0; i < count; i++) {\n            const part = pentomino.faces[pentomino.face][i];\n            const x = pentomino.position.x + part[0];\n            const y = pentomino.position.y + part[1];\n            const partIsOnBoard = this.onBoard(x, y);\n            if (partIsOnBoard) {\n                isTouching = true;\n                break;\n            }\n        }\n        return isTouching;\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-http-client';\nimport { BoardService } from './board-service';\n\n@inject(BoardService)\n\nexport class DataService {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.client = new HttpClient();\n        this.solutions = this.getSolutions();\n        this.timeOutHandle = undefined;\n    }\n\n    deleteSolutions() {\n        this.solutions[this.bs.boardType] = [];\n        this.saveSolution();\n    }\n\n    getPentominos() {\n        let fileName = './data/pentominos.json';\n        return this.client.get(fileName)\n            .then((data) => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getColors() {\n        let fileName = './data/colors.json';\n        return this.client.get(fileName)\n            .then(data => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getStartPosition() {\n        let fileName = './data/start-' + this.bs.boardType + '.json';\n        return this.client.get(fileName)\n            .then(data => {\n                let response = JSON.parse(data.response);\n                return response;\n            });\n    }\n\n    getSolutions() {\n        let solutions;\n        if (localStorage.getItem(\"pentominos2\")) {\n            solutions = JSON.parse(localStorage.getItem(\"pentominos2\"));\n        } else {\n            solutions = {};\n            let boardTypes = this.bs.boardTypes;\n            for (let type in boardTypes) {\n                if (boardTypes.hasOwnProperty(type)) {\n                    solutions[type] = [];\n                }\n            }\n        }\n        return solutions;\n    }\n\n    sortSolutions(solutions) {\n        if (Array.isArray(solutions)) {\n            return solutions.sort((a, b) => {\n                return a < b;\n            });\n        } else {\n            return solutions;\n        }\n    }\n\n    saveSolution(solutionString) {\n        if (solutionString) {\n            this.solutions[this.bs.boardType].push(solutionString);\n        } else {\n            this.saveToLocalStorage();\n        }\n        if (!this.timeOutHandle) {\n            this.timeOutHandle = setTimeout(() => {\n                this.saveToLocalStorage();\n            }, 5000);\n        }\n    }\n\n    saveToLocalStorage() {\n        this.solutions[this.bs.boardType] = this.sortSolutions(this.solutions[this.bs.boardType]);\n        localStorage.setItem(\"pentominos2\", JSON.stringify(this.solutions));\n        clearTimeout(this.timeOutHandle);\n    }\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { SettingService } from './setting-service';\nimport { PentominoService } from './pentomino-service';\nimport { PermutationService } from './permutation-service';\n\n@inject(BindingSignaler, EventAggregator, SettingService, PentominoService, PermutationService)\n\nexport class DragService {\n\n    constructor(bindingSignaler, eventAggregator, settingService, pentominoService, permutationService) {\n        this.bnds = bindingSignaler;\n        this.ea = eventAggregator;\n        this.ss = settingService;\n        this.ps = pentominoService;\n        this.prms = permutationService;\n        this.dragStartPos = {};\n        this.dragEndPos = {};\n        this.lastZindex = 1;\n    }\n\n    getClientPos(event) {\n        let clientX = (event.touches) ? event.touches[0].clientX : event.clientX;\n        let clientY = (event.touches) ? event.touches[0].clientY : event.clientY;\n        return {\n            x: clientX / this.ss.scale,\n            y: clientY / this.ss.scale\n        };\n    }\n\n    startDrag(pentomino, partIndex, event) {\n        if (this.container == null) {\n            let clientPos = this.getClientPos(event);\n            this.ps.setActivePentomino(pentomino, partIndex);\n            this.ps.registerPiece(pentomino, -1);\n            this.container = event.target.offsetParent.offsetParent;\n            this.container.style.zIndex = this.lastZindex++;\n            this.startX = clientPos.x - this.container.offsetLeft;\n            this.startY = clientPos.y - this.container.offsetTop;\n            this.x = clientPos.x - this.startX;\n            this.y = clientPos.y - this.startY;\n            this.dragStartPos.x = this.x;\n            this.dragStartPos.y = this.y;\n        }\n        return false;\n    }\n\n    doDrag(event) {\n        let clientPos = this.getClientPos(event);\n        if (this.ps.getActivePentomino()) {\n            this.x = clientPos.x - this.startX;\n            this.y = clientPos.y - this.startY;\n            this.container.style.left = this.x + 'px';\n            this.container.style.top = this.y + 'px';\n        }\n    }\n\n    stopDrag(event) {\n        this.dragEndPos.x = this.x;\n        this.dragEndPos.y = this.y;\n        let pentomino = this.ps.getActivePentomino();\n        if (pentomino) {\n            this.alignToGrid();\n            if (!this.isDragged()) {\n                // if (((pentomino.type < 4) && (pentomino.activePart < 3)) ||\n                //     ((pentomino.type == 4) && (pentomino.activePart < 1))) {\n                if (pentomino.type <= 4) {\n                    this.ps.adjustPosition();\n                    this.prms.flipRotate(pentomino);\n                    this.ea.publish('move', 1);\n                }\n            } else {\n                this.ea.publish('move', 1);\n            }\n            this.ps.registerPiece(pentomino, 1);\n            this.ps.isSolved();\n        }\n        this.releasePentomino();\n    }\n\n    releasePentomino() {\n        if (this.container) {\n            this.container = null;\n        }\n        this.ps.resetActivePentomino();\n    }\n\n    alignToGrid() {\n        let newX = Math.round(this.x / this.ss.partSize);\n        let newY = Math.round(this.y / this.ss.partSize);\n        this.ps.setActivePentominoPosition(newX, newY);\n        this.container.style.left = newX * this.ss.partSize + 'px';\n        this.container.style.top = newY * this.ss.partSize + 'px';\n    }\n\n    isDragged() {\n        return ((Math.abs(this.dragEndPos.x - this.dragStartPos.x) > 19) || (Math.abs(this.dragEndPos.y - this.dragStartPos.y) > 19));\n    }\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BindingSignaler } from 'aurelia-templating-resources';\nimport { DataService } from './data-service';\nimport { BoardService } from './board-service';\nimport { SolutionService } from './solution-service';\n\n@inject(BindingSignaler, DataService, BoardService, SolutionService)\nexport class PentominoService {\n\n    constructor(bindingSignaler, dataService, boardService, solutionService) {\n\n        this.bnds = bindingSignaler;\n        this.ds = dataService;\n        this.bs = boardService;\n        this.sls = solutionService;\n\n        this.pentominos = [];\n        this.offBoardPentominos = [];\n        this.fields = [];\n        this.activePentomino = null;\n        this.oBlock = null;\n        this.start();\n    }\n\n    get offBoards() {\n        let pentos = this.pentominos.filter((pento) => {\n            return pento.onBoard === false;\n        });\n        return pentos;\n    }\n\n    get onBoards() {\n        let pentos = this.pentominos.filter((pento) => {\n            return pento.onBoard === true;\n        });\n        return pentos;\n    }\n\n    isSolved() {\n        let boardIsFull = this.boardIsFull();\n        if (boardIsFull) {\n            this.bs.setSolved();\n            this.sls.saveSolution(this.pentominos);\n        } else {\n            this.bs.unsetNewSolution();\n            this.bs.unsetSolved();\n        }\n    }\n\n    boardIsFull() {\n        let h = this.bs.getHeight();\n        let w = this.bs.getWidth();\n        for (let y = 0; y < h; y++) {\n            for (let x = 0; x < w; x++) {\n                if (this.fields[y][x] !== 1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    getActivePentomino() {\n        return this.activePentomino;\n    }\n\n    getFields() {\n        return this.fields;\n    }\n\n    setActivePentomino(pentomino, index) {\n        this.activePentomino = pentomino;\n        this.activePentomino.activePart = index;\n    }\n\n    resetActivePentomino() {\n        if (this.activePentomino) {\n            this.activePentomino.activePart = null;\n        }\n        this.activePentomino = null;\n    }\n\n    setActivePentominoPosition(newX, newY) {\n        this.activePentomino.position.x = newX;\n        this.activePentomino.position.y = newY;\n    }\n\n    signalViewUpdate() {\n        this.bnds.signal('position-signal');\n    }\n\n    sortPentominos(pentos) {\n        pentos.sort((a, b) => {\n            return a.index - b.index;\n        });\n        return pentos;\n    }\n\n    adjustPosition() {  // Thanks Ben Nierop, for the idea\n        let pentomino = this.activePentomino;\n        let partRelPosition = pentomino.faces[pentomino.face][pentomino.activePart];\n        let partAbsPosition = [\n            pentomino.position.x + partRelPosition[0],\n            pentomino.position.y + partRelPosition[1]\n        ];\n        let partToBottom = pentomino.dimensions[1] - partRelPosition[1] - 1;\n        let partToRight = pentomino.dimensions[0] - partRelPosition[0] - 1;\n        let activePart = (pentomino.type === 4 && pentomino.activePart > 0) ? 3 : pentomino.activePart;\n        switch (activePart) {\n            case 0:\n                pentomino.position.x = partAbsPosition[0] - partToBottom;\n                pentomino.position.y = partAbsPosition[1] - partRelPosition[0];\n                break;\n            case 1:\n                pentomino.position.x = partAbsPosition[0] - partToRight;\n                break;\n            case 2:\n                pentomino.position.y = partAbsPosition[1] - partToBottom;\n                break;\n            default:\n                pentomino.position.x = partAbsPosition[0] - partToBottom;\n                pentomino.position.y = partAbsPosition[1] - partRelPosition[0];\n        }\n    }\n\n    registerPiece(pentomino, onOff) {\n        if (pentomino) {\n            let onBoardParts = 0;\n            let partsCount = pentomino.faces[pentomino.face].length;\n            for (let i = 0; i < partsCount; i++) {\n                let x = pentomino.faces[pentomino.face][i][0] + pentomino.position.x;\n                let y = pentomino.faces[pentomino.face][i][1] + pentomino.position.y;\n                if (this.bs.onBoard(x, y)) {\n                    this.fields[y][x] += onOff;\n                    onBoardParts += 1;\n                }\n                pentomino.onBoard = (onBoardParts == partsCount);\n            }\n        }\n    }\n\n    registerPieces() {\n        this.fields = this.setBoardFields(0);\n        for (var i = 0; i < this.pentominos.length; i++) {\n            let pentomino = this.pentominos[i];\n            this.registerPiece(pentomino, 1);\n            this.adjustDimensions(pentomino);\n        }\n        this.signalViewUpdate();\n    }\n\n    setBoardFields(content) {\n        let w = this.bs.getWidth();\n        let h = this.bs.getHeight();\n        let fields = [];\n        for (let y = 0; y < h; y++) {\n            fields.push([]);\n            for (let x = 0; x < w; x++) {\n                fields[y].push(content);\n            }\n        }\n        return fields;\n    }\n\n    setPentominos(pentos) {\n        this.pentominos = pentos;\n    }\n\n    // setOffBoardPentominos(pentos) {\n    //     this.offBoardPentominos = pentos;\n    // }\n\n    start() {\n        this.getPentominoData().then((response) => {\n            this.pentominos = response;\n            this.getPentominoColors().then(() => {\n                this.getStartPosition().then(() => {\n                    this.registerPieces();\n                    this.bs.unsetSolved();\n                });\n            });\n        });\n    }\n\n    // Get the pentomino blocks\n    getPentominoData() {\n        return this.ds.getPentominos().then((response) => {\n            return response;\n        });\n    }\n\n    // Get the colors for the pentominos\n    getPentominoColors() {\n        return this.ds.getColors().then((response) => {\n            for (let i = 0; i < this.pentominos.length; i++) {\n                this.pentominos[i].color = response[i].color;\n            }\n        });\n    }\n\n    adjustDimensions(pentomino) {\n        if (pentomino && pentomino.initialDimensions) {\n            pentomino.dimensions = pentomino.initialDimensions.slice();\n        }\n        if (pentomino && pentomino.face % 2 == 1) {\n            pentomino.dimensions.reverse();\n        }\n    }\n\n    boardHas60Squares() {\n        let shape = this.bs.boardType;\n        return !(shape === 'square' || shape === 'stick');\n    }\n\n    // Remove or add the Oblock as needed for current boardType\n    toggleOblock() {\n        if (this.boardHas60Squares()) {\n            if (!this.oBlock) {\n                this.oBlock = this.pentominos.pop();\n            }\n        } else {\n            if (this.oBlock) {\n                this.pentominos.push(this.oBlock);\n                this.oBlock = null;\n            }\n        }\n    }\n\n    // Get the starting position for the given board type\n    getStartPosition() {\n        return this.ds.getStartPosition().then((response) => {\n            this.sls.currentSolution = -1;\n            let count = response.length;\n            this.toggleOblock();\n            for (let i = 0; i < count; i++) {\n                let pentomino = this.pentominos[i];\n                pentomino.face = response[i].face;\n                pentomino.position = response[i].position;\n                pentomino.active = false;\n                pentomino.index = i;\n                if (!pentomino.initialDimensions) {\n                    pentomino.initialDimensions = pentomino.dimensions.slice();\n                } else {\n                    pentomino.dimensions = pentomino.initialDimensions.slice();\n                }\n                if (pentomino.face % 2 == 1) {\n                    pentomino.dimensions.reverse();\n                }\n            }\n            this.registerPieces();\n        });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from './board-service';\n\n@inject(BoardService)\n\nexport class PermutationService {\n\n    constructor(boardService) {\n        this.bs = boardService;\n        this.rotable = [\n            [ // rotate clockwise\n                [1, 2, 3, 0, 5, 6, 7, 4], // blyfn\n                [1, 2, 3, 0], // vw\n                [1, 2, 3, 0], // tu\n                [1, 0, 3, 2], // z\n                [1, 0], // i\n                [0] // xo not necessary\n            ],\n            [ // flip around yAxis\n                [4, 7, 6, 5, 0, 3, 2, 1], // blyfn\n                [3, 2, 1, 0], // vw\n                [0, 3, 2, 1], // tu\n                [2, 3, 0, 1], // z\n                [0, 1], // i not necessary\n                [0] // xo not necessary\n            ],\n            [ // flip around xAxis\n                [6, 5, 4, 7, 2, 1, 0, 3], // blyfn\n                [1, 0, 3, 2], // vw\n                [2, 1, 0, 3], // tu\n                [2, 3, 0, 1], // z\n                [0, 1], // i not necessary\n                [0] // xo not necessary\n            ],\n            [ // rotate counter clockwise\n                [3, 0, 1, 2, 7, 4, 5, 6], // blyfn\n                [3, 0, 1, 2], // vw\n                [3, 0, 1, 2], // tu\n                [0, 1, 2, 3], // z\n                [1, 0], // i\n                [0] // xo not necessary\n            ]\n        ];\n    }\n\n    // Returns the new face index for a given face, action and blocktype\n    flipRotate(pentomino, part) {\n        let partTranslations = [\n            [0, 1, 2, 3, 3],\n            [0, 1, 2, 3, 3],\n            [0, 1, 2, 3, 3],\n            [0, 1, 2, 3, 3],\n            [0, 0, 0, 0, 0]\n        ]\n        if (part == undefined) {\n            part = partTranslations[pentomino.type][pentomino.activePart];\n        }\n        pentomino.face = this.rotable[part][pentomino.type][pentomino.face];\n        // switch the dimensions if pentomino is rotated;\n        if (part === 0) {\n            pentomino.dimensions.reverse();\n        }\n    }\n\n    flipBoardYAxis(pentominos) {\n        let pentomino;\n        for (let i = 0; i < pentominos.length; i++) {\n            pentomino = pentominos[i];\n            this.flipRotate(pentomino, 1);\n            pentomino.position.x = this.bs.getWidth() - pentomino.position.x - pentomino.dimensions[0];\n        }\n    }\n\n    // 90° clockwise rotation\n    rotateSquareBoard(pentominos) {\n        let pentomino;\n        let origin = {};\n        for (let i = 0; i < pentominos.length; i++) {\n            pentomino = pentominos[i];\n            // bottom left of current rectangle occupied by pentomino\n            origin.x = pentomino.position.x;\n            origin.y = pentomino.position.y + pentomino.dimensions[1];\n            // rotated position on board\n            pentomino.position.x = this.bs.getWidth() - origin.y;\n            pentomino.position.y = origin.x;\n            // rotated pentomino\n            this.flipRotate(pentomino, 0);\n        }\n    }\n\n    shiftPieces(pentominos, dx, dy) {\n        for (let i = 0; i < pentominos.length; i++) {\n            pentominos[i].position.x += dx;\n            pentominos[i].position.y += dy;\n        }\n    }\n\n    shiftPiecesToTop(pentominos) {\n        let topMostY = Math.min(...pentominos.map(pentomino => {\n            return pentomino.position.y;\n        }));\n        this.shiftPieces(pentominos, 0, -topMostY);\n    }\n\n    rotateBoard(pentominos) {\n        if (this.bs.boardType == 'square') {\n            this.rotateSquareBoard(pentominos);\n        } else {\n            // rotate twice and shift pentominos to top\n            for (let i = 0; i < 2; i++) this.rotateSquareBoard(pentominos);\n            this.shiftPiecesToTop(pentominos);\n        }\n    }\n\n    mixBoard(pentominos) {\n        let clientWidth = Math.floor(document.querySelectorAll('.dragArea')[0].clientWidth / this.bs.partSize);\n        let clientHeight = Math.floor(document.querySelectorAll('.dragArea')[0].clientHeight / this.bs.partSize);\n        let maxX = clientWidth - 4;\n        let maxY = clientHeight - 4;\n        // offset values in positions\n        let offsetX = Math.floor((clientWidth - this.bs.getWidth()) / 2);\n\n        const count = pentominos.length;\n        for (let i = 0; i < count; i++) {\n            const pentomino = pentominos[i];\n            const face = Math.floor(Math.random() * pentomino.faces.length);\n            pentomino.face = face;\n            // find random off board position\n            do {\n                let xPos = Math.floor(Math.random() * maxX);\n                xPos -= offsetX;\n                let yPos = Math.floor(Math.random() * maxY);\n\n                pentomino.position.x = xPos;\n                pentomino.position.y = yPos;\n            } while (this.bs.touchesBoard(pentomino));\n            pentomino.onBoard = false;\n        }\n    }\n\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nexport class SettingService {\n\n    constructor() {\n        this.opaqueBlocks = true;\n        this.scale = 1;\n        this.partSize = 40;\n        this.opaqueBlocks = false;\n    }\n\n    getScale() {\n        let screenWidth = document.querySelectorAll(\"html\")[0].clientWidth;\n        let boardWidth = document.querySelectorAll(\".board\")[0].clientWidth;\n        let scale = Math.min(screenWidth / boardWidth, 1);\n        scale = Math.floor(scale * 10) / 10;\n        this.scale = scale;\n        return {\n            'transformOrigin': 'top',\n            '-webkit-transform': 'scale(' + scale + ', ' + scale + ')',\n            '-ms-transform': 'scale(' + scale + ', ' + scale + ')',\n            'transform': 'scale(' + scale + ', ' + scale + ')'\n        };\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { BoardService } from './board-service';\nimport { PermutationService } from './permutation-service';\nimport { DataService } from './data-service';\nimport { SettingService } from '../services/setting-service';\n\n@inject(BoardService, PermutationService, DataService, SettingService)\n\nexport class SolutionService {\n\n    constructor(boardService, permutationService, dataService, settingService) {\n        this.bs = boardService;\n        this.ds = dataService;\n        this.ss = settingService;\n        this.prms = permutationService;\n        this.possibleSolutions = [];\n        this.currentSolution = -1;\n        this.getSolutions();\n    }\n\n    getSolutions() {\n        this.solutions = this.ds.getSolutions();\n    }\n\n    setPossibleSolutions(onBoardPentominos) {\n        const rotations = (this.bs.boardType == 'square') ? 4 : 2;\n        let solutions = this.solutions[this.bs.boardType];\n        let flipRotatedOnboardStrings = [];\n\n        // Mirror\n        for (let flip = 0; flip < 2; flip++) {\n            // Rotate\n            for (let rotation = 0; rotation < rotations; rotation++) {\n                let onBoardStrings = onBoardPentominos.map(pentomino => {\n                    return this.pentomino2string(pentomino);\n                });\n                flipRotatedOnboardStrings.push(onBoardStrings);\n                this.prms.rotateBoard(onBoardPentominos);\n            }\n            this.prms.flipBoardYAxis(onBoardPentominos);\n        }\n\n        let containsAll = (solution) => {\n            let results = flipRotatedOnboardStrings.map(onBoardStringsArr => {\n                let result = true;\n                onBoardStringsArr.forEach(str => {\n                    result = solution.includes(str) && result;\n                });\n                return result;\n            });\n            return results.some(result => {\n                return result;\n            });\n        };\n        this.possibleSolutions = solutions.filter(solution => {\n            return containsAll(solution);\n        });\n    }\n\n    getPossibleSolutionsCount() {\n        return this.possibleSolutions.length;\n    }\n\n    deleteSolutions() {\n        this.ds.deleteSolutions();\n        this.getSolutions();\n    }\n\n    saveSolution(pentominos) {\n        if (pentominos) {\n            let solutionResult = this.isNewSolution(pentominos);\n            // A number indicates an existing solution\n            // A string indicate a new solution\n            if (!isNaN(solutionResult)) {\n                // show this solution\n                this.currentSolution = solutionResult;\n                this.bs.unsetNewSolution();\n            } else {\n                this.solutions[this.bs.boardType].push(solutionResult);\n                this.currentSolution = this.solutions[this.bs.boardType].length - 1;\n                this.bs.setNewSolution();\n                this.ds.saveSolution(solutionResult);\n            }\n        } else {\n            this.ds.saveSolution();\n        }\n    }\n\n    findSolution(solutionString) {\n        return this.solutions[this.bs.boardType].indexOf(solutionString);\n    }\n\n    isNewSolution(pentominos) {\n        const rotations = (this.bs.boardType == 'square') ? 4 : 2;\n        const foundSolStr = this.solution2String(pentominos);\n        // use .split() to create arrays\n        // Mirror\n        for (let flip = 0; flip < 2; flip++) {\n            // Rotate\n            for (let rotation = 0; rotation < rotations; rotation++) {\n                // Existing solutions\n                let solutionString = this.solution2String(pentominos);\n                let solNr = this.findSolution(solutionString);\n                if (solNr >= 0) {\n                    return solNr;\n                }\n                this.prms.rotateBoard(pentominos);\n            }\n            this.prms.flipBoardYAxis(pentominos);\n        }\n        return foundSolStr;\n    }\n\n    solution2String(pentominos) {\n        let solutionString = \"\";\n        const count = pentominos.length;\n        let i = 0;\n        for (; i < count; i++) {\n            let pentomino = pentominos[i];\n            solutionString += this.pentomino2string(pentomino);\n        }\n        return solutionString;\n    }\n\n    pentomino2string(pentomino) {\n        let parts = [];\n        if (pentomino) {\n            parts.push('#' + pentomino.name);\n            parts.push(pentomino.face);\n            parts.push(pentomino.position.x);\n            parts.push(pentomino.position.y);\n            return parts.join('_');\n        }\n    }\n\n}","let boardType = '';\nlet boardWidth;\nlet boardHeight;\nlet rotatedBoard = false;\nlet fields = [];\nlet pentominos = [];\nlet offBoardPentominos = [];\nlet startPositionsXblock = {\n    'square': [\n        [1, 0],\n        [1, 1],\n        [2, 0],\n        [2, 1],\n        [2, 2]\n    ],\n    'rectangle': [\n        [1, 0],\n        [0, 1],\n        [1, 1],\n        [0, 2],\n        [1, 2],\n        [0, 3],\n        [1, 3]\n    ],\n    'dozen': [\n        [1, 0],\n        [2, 0],\n        [3, 0],\n        [4, 0],\n        [0, 1],\n        [1, 1],\n        [2, 1],\n        [3, 1],\n        [4, 1]\n    ],\n    'beam': [\n        [1, 0],\n        [2, 0],\n        [3, 0],\n        [4, 0],\n        [5, 0],\n        [6, 0]\n    ],\n    'stick': [\n        [1, 0],\n        [2, 0],\n        [3, 0],\n        [4, 0],\n        [5, 0],\n        [6, 0]\n    ],\n    'twig': [\n        [1, 0],\n        [6, 0]\n    ]\n};\nlet xPentomino = () => getPentomino('x');\nlet startPosXBlock = 0;\nlet positionsTried = 0;\nlet proceed = true;\n\nlet adjustDimensions = function (pentomino) {\n    if (pentomino && pentomino.initialDimensions) {\n        pentomino.dimensions = pentomino.initialDimensions.slice();\n    }\n    if (pentomino && pentomino.face % 2 === 1) {\n        pentomino.dimensions.reverse();\n    }\n};\n\nlet autoSolve = function () {\n    if (allOffBoard()) {\n        // put the x on board\n        setOnboard(xPentomino(), false);\n        let xPosition = getXBlockPosition();\n        while (xPosition) {  //for all x positions\n            movePentomino(xPentomino(), 0, xPosition, false);\n            sendFeedBack('draw');\n            positionsTried++;\n            findNextFit(offBoardPentominos.slice());\n            xPosition = getXBlockPosition();\n        }\n    } else {\n        findNextFit(offBoardPentominos.slice());\n    }\n};\n\nlet allOffBoard = function () {\n    let emptyBoard = pentominos.length === 0;\n    return emptyBoard;\n};\n\nlet copyBoardFields = function () {\n    let flds = [];\n    for (let y = 0; y < boardHeight; y++) {\n        flds.push([]);\n        for (let x = 0; x < boardWidth; x++) {\n            flds[y].push(fields[y][x]);\n        }\n    }\n    return flds;\n};\n\nlet discard = function (misFits) {\n    let pentomino = pentominos.pop();\n    pentomino.onBoard = false;\n    misFits.push(pentomino);\n    registerPiece(pentomino, -1);\n};\n\nlet findFirstEmptyPosition = function () {\n    // #todo Traverse arrays without for loop\n    let firstAxis = Math.max(boardHeight, boardWidth);\n    let secondAxis = Math.min(boardHeight, boardWidth);\n\n    for (let i = 0; i < firstAxis; i++) {\n        for (let j = 0; j < secondAxis; j++) {\n            if (rotatedBoard) {\n                if (fields[j][i] === 0) return [i, j];\n            } else {\n                if (fields[i][j] === 0) return [j, i];\n            }\n        }\n    }\n    return false;\n};\n\nlet findFirstPartRight = function (pentomino) {\n    let offsetRight = pentomino.dimensions[0];\n    let face = pentomino.faces[pentomino.face];\n    for (let j = 0; j < face.length; j++) {\n        let part = face[j];\n        offsetRight = ((part[1] === 0) && (part[0] < offsetRight)) ? part[0] : offsetRight;\n    }\n    return offsetRight;\n};\n\nlet findFirstPartDown = function (pentomino) {\n    let offsetDown = pentomino.dimensions[1];\n    let face = pentomino.faces[pentomino.face];\n    for (let j = 0; j < face.length; j++) {\n        let part = face[j];\n        offsetDown = ((part[0] === 0) && (part[1] < offsetDown)) ? part[1] : offsetDown;\n    }\n    return offsetDown;\n};\n\nlet findNextFit = function (offBoards) {\n    let misFits = [];\n    const firstEmptyPosition = findFirstEmptyPosition();\n    if (firstEmptyPosition) { // start trying other pentominos\n        if (holeFitsXPieces(firstEmptyPosition)) {\n            while (offBoards.length) {\n                const pentomino = nextOnboard(offBoards);\n                if (pentomino) {\n                    const count = pentomino.faces.length;\n                    for (let face = 0; face < count; face++) {\n                        positionsTried++;\n                        movePentomino(pentomino, face, firstEmptyPosition, true);\n                        if (isFitting() && proceed) {\n                            // sendFeedBack('draw');\n                            findNextFit(sortPentominos(misFits.concat(offBoards)));\n                        }\n                    }\n                    discard(misFits);\n                    // sendFeedBack('draw');\n                } // else next pentomino\n            }\n        }\n    } else {\n        sendFeedBack('solution');\n    }\n};\n\nlet findPentominoByName = function (set, name) {\n    return set.find((pento) => { return pento.name === name; });\n};\n\nlet getPentomino = function (name) {\n    let pentomino = findPentominoByName(pentominos.concat(offBoardPentominos), name);\n    return pentomino;\n};\n\nlet getXBlockPosition = function () {\n    if (startPosXBlock < startPositionsXblock[boardType].length) {\n        let position = startPositionsXblock[boardType][startPosXBlock].slice();\n        startPosXBlock += 1;\n        return position;\n    } else {\n        return false;\n    }\n};\n\n// find out if open region at x,y is large enough for a pentomino by recursion counting\n// xy has to be the most up left open spot\nlet holeFitsXPieces = function (xy) {\n    let holeSize = 0;\n    let oPentoOnboard = oPentominoOnboard();\n    let label = 'a';\n    let board = copyBoardFields();\n    let y = xy[1];\n\n    let countDown = (xy) => {\n        let y = xy[1];\n        const x = xy[0];\n        while ((y < boardHeight) && (board[y][x] === 0)) {\n            board[y][x] = label;\n            holeSize++;\n            // console.table(board);\n            countLeft([x - 1, y]);\n            countRight([x + 1, y]);\n            y++;\n        }\n    };\n\n    let countUp = (xy) => {\n        let y = xy[1];\n        const x = xy[0];\n        while ((y >= 0) && (board[y][x] === 0)) {\n            board[y][x] = label;\n            holeSize++;\n            // console.table(board);\n            countRight([x + 1, y]);\n            countLeft([x - 1, y]);\n            y--;\n        }\n    };\n\n    let countRight = (xy) => {\n        let x = xy[0];\n        const y = xy[1];\n        while ((x < boardWidth) && (board[y][x] === 0)) {\n            board[y][x] = label;\n            holeSize++;\n            // console.table(board);\n            countDown([x, y + 1]);\n            countUp([x, y - 1]);\n            x++;\n        }\n    };\n\n    let countLeft = (xy) => {\n        let x = xy[0];\n        const y = xy[1];\n        while ((x >= 0) && (board[y][x] === 0)) {\n            board[y][x] = label;\n            holeSize++;\n            // console.table(board);\n            countDown([x, y + 1]);\n            countUp([x, y - 1]);\n            x--;\n        }\n    };\n\n    countRight(xy);\n    return holeFits(holeSize);\n};\n\nlet boardHas60Squares = function () {\n    return !(boardType === 'square' || boardType === 'stick');\n};\n\nlet holeFits = function (sum) {\n    let compensation = (oPentominoOnboard() || boardHas60Squares()) ? 0 : 4;\n    return ((sum - compensation) % 5 === 0);\n};\n\nlet initVariables = function (data) {\n    boardType = data.boardType;\n    boardWidth = data.boardWidth;\n    boardHeight = data.boardHeight;\n    rotatedBoard = boardHeight < boardWidth;\n    fields = data.fields;\n    pentominos = data.onBoards;\n    offBoardPentominos = data.offBoards;\n};\n\n// Return true if no overlapping pieces and all pieces are completely on the board\nlet isFitting = function () {\n    let sum = 0;\n    const h = fields.length;\n    for (let y = 0; y < h; y++) {\n        const w = fields[y].length;\n        for (let x = 0; x < w; x++) {\n            if (fields[y][x] > 1) {\n                return false;\n            } else {\n                sum += fields[y][x];\n            }\n        }\n    }\n    return noneStickingOut(sum);\n};\n\nlet logBoard = function () {\n    let flds = setBoardFields('');\n    const blockCount = pentominos.length;\n    for (let i = 0; i < blockCount; i++) {\n        const pentomino = pentominos[i];\n        const face = pentomino.faces[pentomino.face];\n        const partCount = face.length;\n        for (let j = 0; j < partCount; j++) {\n            const x = face[j][0] + pentomino.position.x;\n            const y = face[j][1] + pentomino.position.y;\n            if (y < boardHeight && x < boardWidth) {\n                flds[y][x] += pentomino.name;\n            }\n        }\n    }\n    console.clear();\n    console.table(flds);\n};\n\nlet movePentomino = function (pentomino, face, position, shiftIt) {\n    let newPosition;\n    registerPiece(pentomino, -1);\n    setFace(pentomino, face);\n    // If left top of pentomino is empty ___|\n    // move pentomino to the left or up in case of oblong board \n    if (rotatedBoard) {\n        if (shiftIt && position[1] > 0) {\n            let yShift = findFirstPartDown(pentomino);\n            newPosition = [position[0], position[1] - yShift];\n        } else {\n            newPosition = position;\n        }\n    } else {\n        if (shiftIt && position[0] > 0) {\n            let xShift = findFirstPartRight(pentomino);\n            newPosition = [position[0] - xShift, position[1]];\n        } else {\n            newPosition = position;\n        }\n    }\n    setPosition(pentomino, newPosition);\n    registerPiece(pentomino, 1);\n};\n\nlet nextOnboard = function (offBoards) {\n    let pentomino = offBoards.shift();\n    pentomino.onBoard = true;\n    pentominos.push(pentomino);\n    registerPiece(pentomino, 1);\n    return pentomino;\n};\n\nlet noneStickingOut = function (sum) {\n    let compensation = oPentominoOnboard() ? 4 : 0;\n    return ((sum - compensation) % 5 === 0);\n};\n\nlet onBoard = function (x, y) {\n    return (x >= 0) && (x < boardWidth) && (y >= 0) && (y < boardHeight);\n};\n\nlet oPentominoOnboard = function () {\n    return pentominos.filter((pento) => {\n        return pento.name === 'o';\n    }).length > 0;\n};\n\nlet registerPiece = function (pentomino, onOff) {\n    if (pentomino) {\n        let onBoardParts = 0;\n        const face = pentomino.faces[pentomino.face];\n        const partsCount = face.length;\n        for (let i = 0; i < partsCount; i++) {\n            const part = face[i];\n            const x = part[0] + pentomino.position.x;\n            const y = part[1] + pentomino.position.y;\n            if (onBoard(x, y)) {\n                fields[y][x] += onOff;\n                onBoardParts += 1;\n            }\n            pentomino.onBoard = (onBoardParts == partsCount);\n        }\n    }\n};\n\nlet sendFeedBack = function (message) {\n    // logBoard();\n    let workerData = {\n        message: message || 'solution',\n        positions: positionsTried,\n        onBoards: []\n    };\n    switch (message) {\n        case 'draw':\n            workerData.onBoards = pentominos;\n            break;\n        case 'solution':\n            workerData.onBoards = pentominos;\n            break;\n        case 'finish':\n            workerData.onBoards = pentominos.concat(offBoardPentominos);\n            postMessage(workerData);\n            close();\n        default:\n            close();\n            break;\n    }\n    postMessage(workerData);\n};\n\nlet setFace = function (pentomino, face) {\n    pentomino.face = face;\n    adjustDimensions(pentomino);\n};\n\nlet setPosition = function (pentomino, position) {\n    pentomino.position.x = position[0];\n    pentomino.position.y = position[1];\n};\n\nlet setBoardFields = function (content) {\n    let w = boardWidth;\n    let h = boardHeight;\n    let fields = [];\n    for (let y = 0; y < h; y++) {\n        fields.push([]);\n        for (let x = 0; x < w; x++) {\n            fields[y].push(content);\n        }\n    }\n    return fields;\n};\n\nlet setOnboard = function (pentomino) {\n    pentominos.push(pentomino);\n    let index = offBoardPentominos.indexOf(pentomino);\n    offBoardPentominos.splice(index, 1);\n};\n\nlet sortPentominos = function (pentos) {\n    pentos.sort((a, b) => {\n        return a.index - b.index;\n    });\n    return pentos;\n};\n\nonmessage = function (e) {\n    positionsTried = 0;\n    let message = e.data.message;\n    switch (message) {\n        case 'solve':\n            proceed = true;\n            initVariables(e.data);\n            autoSolve();\n            break;\n        case 'stop':\n            proceed = false;\n            break;\n        default:\n            break;\n    }\n    sendFeedBack('finish');\n};\n","export class PartPosValueConverter {\n    toView(css, config) {\n        css = {\n            left: config.x * config.partSize + 'px',\n            top: config.y * config.partSize + 'px'\n        };\n        return css;\n    }\n}","export class PentoFaceValueConverter {\n    toView(array, config) {\n        array = config.faces[config.face];\n        return array;\n    }\n}","export class PentoPosValueConverter {\n    toView(css, config) {\n        css = {\n            left: config.x * config.partSize + 'px',\n            top: config.y * config.partSize + 'px',\n            backgroundColor: config.color\n        };\n        return css;\n    }\n}","export class ThousandsValueConverter {\n    toView(number) {\n        return number.toLocaleString('nl');\n    }\n}","colors = [\n    {\n        \"name\": \"b\",\n        \"color\": \"midnightblue\"\n    }, {\n        \"name\": \"c\",\n        \"color\": \"darkviolet\"\n    }, {\n        \"name\": \"f\",\n        \"color\": \"darkorange\"\n    }, {\n        \"name\": \"i\",\n        \"color\": \"maroon\"\n    }, {\n        \"name\": \"l\",\n        \"color\": \"darkgreen\"\n    }, {\n        \"name\": \"n\",\n        \"color\": \"magenta\"\n    }, {\n        \"name\": \"t\",\n        \"color\": \"limegreen\"\n    }, {\n        \"name\": \"v\",\n        \"color\": \"deepskyblue\"\n    }, {\n        \"name\": \"w\",\n        \"color\": \"teal\"\n    }, {\n        \"name\": \"x\",\n        \"color\": \"red\"\n    }, {\n        \"name\": \"y\",\n        \"color\": \"gold\"\n    }, {\n        \"name\": \"z\",\n        \"color\": \"mediumblue\"\n    }, {\n        \"name\": \"o\",\n        \"color\": \"darkslategray\"\n    }\n];\n","pentominos = [\n    {\n        \"name\": \"b\",\n        \"type\": 0,\n        \"faces\": [\n            [[1, 0], [1, 1], [0, 0], [2, 0], [0, 1]],\n            [[1, 1], [1, 0], [0, 1], [0, 0], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 0], [2, 1]],\n            [[0, 1], [0, 0], [1, 1], [0, 2], [1, 2]],\n            [[1, 0], [1, 1], [0, 0], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 1], [0, 2], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [0, 0], [2, 1]],\n            [[0, 1], [0, 0], [1, 1], [0, 2], [1, 0]]\n        ],\n        \"dimensions\": [3, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"c\",\n        \"type\": 2,\n        \"faces\": [\n            [[1, 0], [0, 1], [0, 0], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 0], [1, 2], [0, 2]],\n            [[1, 1], [0, 0], [0, 1], [2, 1], [2, 0]],\n            [[0, 1], [0, 0], [1, 0], [0, 2], [1, 2]]\n        ],\n        \"dimensions\": [3, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"f\",\n        \"type\": 0,\n        \"faces\": [\n            [[1, 1], [1, 0], [0, 1], [2, 0], [1, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [2, 2]],\n            [[1, 1], [1, 0], [2, 1], [0, 2], [1, 2]],\n            [[1, 1], [1, 2], [0, 1], [0, 0], [2, 1]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [1, 2]],\n            [[1, 1], [1, 2], [0, 1], [2, 0], [2, 1]],\n            [[1, 1], [1, 0], [0, 1], [1, 2], [2, 2]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [0, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"i\",\n        \"type\": 4,\n        \"faces\": [\n            [[2, 0], [0, 0], [1, 0], [3, 0], [4, 0]],\n            [[0, 2], [0, 0], [0, 1], [0, 3], [0, 4]]\n        ],\n        \"dimensions\": [5, 1],\n        \"parts\": 5\n    }, {\n        \"name\": \"l\",\n        \"type\": 0,\n        \"faces\": [\n            [[0, 0], [0, 1], [1, 0], [2, 0], [3, 0]],\n            [[1, 0], [1, 1], [0, 0], [1, 2], [1, 3]],\n            [[3, 1], [3, 0], [2, 1], [0, 1], [1, 1]],\n            [[0, 3], [0, 2], [1, 3], [0, 0], [0, 1]],\n            [[3, 0], [3, 1], [2, 0], [0, 0], [1, 0]],\n            [[1, 3], [1, 2], [0, 3], [1, 0], [1, 1]],\n            [[0, 1], [0, 0], [1, 1], [2, 1], [3, 1]],\n            [[0, 0], [0, 1], [1, 0], [0, 2], [0, 3]]\n        ],\n        \"dimensions\": [4, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"n\",\n        \"type\": 0,\n        \"faces\": [\n            [[2, 0], [2, 1], [1, 0], [0, 0], [3, 1]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [0, 3]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [3, 1]],\n            [[0, 1], [0, 2], [1, 1], [1, 0], [0, 3]],\n            [[1, 0], [1, 1], [2, 0], [0, 1], [3, 0]],\n            [[1, 1], [1, 2], [0, 1], [0, 0], [1, 3]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [3, 0]],\n            [[0, 2], [0, 1], [1, 2], [0, 0], [1, 3]]\n        ],\n        \"dimensions\": [4, 2],\n        \"parts\": 5\n    }, {\n        \"name\": \"t\",\n        \"type\": 2,\n        \"faces\": [\n            [[1, 0], [1, 1], [0, 0], [2, 0], [1, 2]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [2, 2]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [2, 2]],\n            [[0, 1], [0, 0], [1, 1], [2, 1], [0, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"v\",\n        \"type\": 1,\n        \"faces\": [\n            [[0, 2], [0, 1], [1, 2], [0, 0], [2, 2]],\n            [[0, 0], [0, 1], [1, 0], [0, 2], [2, 0]],\n            [[2, 0], [2, 1], [1, 0], [0, 0], [2, 2]],\n            [[2, 2], [2, 1], [1, 2], [0, 2], [2, 0]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"w\",\n        \"type\": 1,\n        \"faces\": [\n            [[1, 1], [1, 2], [0, 1], [0, 0], [2, 2]],\n            [[1, 1], [1, 0], [0, 1], [0, 2], [2, 0]],\n            [[1, 1], [1, 0], [2, 1], [0, 0], [2, 2]],\n            [[1, 1], [1, 2], [2, 1], [0, 2], [2, 0]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"x\",\n        \"type\": 5,\n        \"faces\": [\n            [[1, 0], [0, 1], [1, 1], [2, 1], [1, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"y\",\n        \"type\": 0,\n        \"faces\": [\n            [[0, 1], [0, 0], [1, 1], [0, 2], [0, 3]],\n            [[2, 0], [2, 1], [1, 0], [0, 0], [3, 0]],\n            [[1, 2], [1, 1], [0, 2], [1, 0], [1, 3]],\n            [[1, 1], [1, 0], [0, 1], [2, 1], [3, 1]],\n            [[1, 1], [1, 0], [0, 1], [1, 2], [1, 3]],\n            [[2, 1], [2, 0], [1, 1], [0, 1], [3, 1]],\n            [[0, 2], [0, 1], [1, 2], [0, 0], [0, 3]],\n            [[1, 0], [1, 1], [0, 0], [2, 0], [3, 0]]\n        ],\n        \"dimensions\": [2, 4],\n        \"parts\": 5\n    }, {\n        \"name\": \"z\",\n        \"type\": 3,\n        \"faces\": [\n            [[1, 1], [2, 2], [0, 1], [2, 1], [0, 0]],\n            [[1, 1], [1, 2], [0, 2], [1, 0], [2, 0]],\n            [[1, 1], [0, 2], [0, 1], [2, 0], [2, 1]],\n            [[1, 1], [1, 2], [0, 0], [1, 0], [2, 2]]\n        ],\n        \"dimensions\": [3, 3],\n        \"parts\": 5\n    }, {\n        \"name\": \"o\",\n        \"type\": 5,\n        \"faces\": [\n            [[0, 0], [1, 0], [0, 1], [1, 1]]\n        ],\n        \"dimensions\": [2, 2],\n        \"parts\": 4\n    }\n];\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 5\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 8,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 8,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 5\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 7\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 2\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 0,\n            \"y\": 2\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": -1,\n            \"y\": 6\n        }\n    }\n]\n","squareStart = [\n    {\n        \"name\": \"b\",\n        \"face\": 7,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"c\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 5\n        }\n    }, {\n        \"name\": \"f\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 1\n        }\n    }, {\n        \"name\": \"i\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 9\n        }\n    }, {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 5,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"n\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 2,\n            \"y\": 7\n        }\n    }, {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 7\n        }\n    }, {\n        \"name\": \"v\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 3\n        }\n    }, {\n        \"name\": \"w\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 0\n        }\n    }, {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 4,\n            \"y\": 3\n        }\n    }, {\n        \"name\": \"y\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 5\n        }\n    }, {\n        \"name\": \"z\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 1,\n            \"y\": 4\n        }\n    }, {\n        \"name\": \"o\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 3,\n            \"y\": 10\n        }\n    }\n];\n","[\n    {\n        \"name\" : \"b\",\n        \"face\" : 7,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"c\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 5\n        }\n    },{\n        \"name\" : \"f\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 6,\n            \"y\" : 1\n        }\n    },{\n        \"name\" : \"i\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 9\n        }\n    },{\n        \"name\" : \"l\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 9,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"n\",\n        \"face\" : 4,\n        \"position\" : {\n            \"x\" : 6,\n            \"y\" : 7\n        }\n    },{\n        \"name\" : \"t\",\n        \"face\" : 1,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 7\n        }\n    },{\n        \"name\" : \"v\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 3\n        }\n    },{\n        \"name\" : \"w\",\n        \"face\" : 2,\n        \"position\" : {\n            \"x\" : 7,\n            \"y\" : 0\n        }\n    },{\n        \"name\" : \"x\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 8,\n            \"y\" : 3\n        }\n    },{\n        \"name\" : \"y\",\n        \"face\" : 6,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 5\n        }\n    },{\n        \"name\" : \"z\",\n        \"face\" : 3,\n        \"position\" : {\n            \"x\" : 5,\n            \"y\" : 4\n        }\n    },{\n        \"name\" : \"o\",\n        \"face\" : 0,\n        \"position\" : {\n            \"x\" : 7,\n            \"y\" : 10\n        }\n    }\n]\n","[\n    {\n        \"name\": \"b\",\n        \"face\": 4,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"c\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"f\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 3\n        }\n    },\n    {\n        \"name\": \"i\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"l\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 12,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"n\",\n        \"face\": 6,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 6\n        }\n    },\n    {\n        \"name\": \"t\",\n        \"face\": 1,\n        \"position\": {\n            \"x\": 9,\n            \"y\": 4\n        }\n    },\n    {\n        \"name\": \"v\",\n        \"face\": 3,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 5\n        }\n    },\n    {\n        \"name\": \"w\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 10,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"x\",\n        \"face\": 0,\n        \"position\": {\n            \"x\": 7,\n            \"y\": 1\n        }\n    },\n    {\n        \"name\": \"y\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 12,\n            \"y\": 0\n        }\n    },\n    {\n        \"name\": \"z\",\n        \"face\": 2,\n        \"position\": {\n            \"x\": 6,\n            \"y\": 5\n        }\n    }\n]\n"],"sourceRoot":"../src"}